{
	"id": "d445df54b06e3c405ae5e3725b1afea8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DexToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"./token/ERC20/ERC20.sol\";\r\nimport \"./token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"./security/Pausable.sol\";\r\nimport \"./access/Ownable.sol\";\r\n\r\n\r\ncontract DexToken is ERC20, ERC20Burnable, Pausable, Ownable {\r\n    uint256 public burnRate;\r\n    constructor() ERC20(\"DexToken\", \"DEX\") {\r\n        _mint(msg.sender, 50 * 10 ** 27);\r\n        burnRate = 3; // Set initial burn rate to 3%\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n     function _beforeTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        whenNotPaused\r\n        override\r\n    {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    // Function to update the burn rate\r\n    function setBurnRate(uint256 newBurnRate) public onlyOwner {\r\n        require(newBurnRate <= 100, \"Burn rate cannot be more than 100%\");\r\n        burnRate = newBurnRate;\r\n    }\r\n\r\n    // Override the _transfer function to implement burning based on the variable burn rate\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual override {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        // Calculate the burn amount based on the current burn rate\r\n        uint256 burnAmount = amount * burnRate / 100;\r\n\r\n        // Calculate the amount to be transferred after burning\r\n        uint256 sendAmount = amount - burnAmount;\r\n\r\n        // Burn the calculated burn amount\r\n        _burn(sender, burnAmount);\r\n\r\n        // Proceed with the transfer after burning\r\n        super._transfer(sender, recipient, sendAmount);\r\n    }\r\n}        "
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _requireNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        _requirePaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is paused.\r\n     */\r\n    function _requireNotPaused() internal view virtual {\r\n        require(!paused(), \"Pausable: paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is not paused.\r\n     */\r\n    function _requirePaused() internal view virtual {\r\n        require(paused(), \"Pausable: not paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}"
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../../utils/Context.sol\";\r\nimport \"../ERC20.sol\";\r\n/**\r\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\r\n * tokens and those that they have an allowance for, in a way that can be\r\n * recognized off-chain (via event analysis).\r\n */\r\nabstract contract ERC20Burnable is Context, ERC20 {\r\n    /**\r\n     * @dev Destroys `amount` tokens from the caller.\r\n     *\r\n     * See {ERC20-_burn}.\r\n     */\r\n    function burn(uint256 amount) public virtual {\r\n        _burn(_msgSender(), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\r\n     * allowance.\r\n     *\r\n     * See {ERC20-_burn} and {ERC20-allowance}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have allowance for ``accounts``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function burnFrom(address account, uint256 amount) public virtual {\r\n        _spendAllowance(account, _msgSender(), amount);\r\n        _burn(account, amount);\r\n    }\r\n}"
			},
			"contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/Context.sol\";\r\nimport \"./IERC20.sol\";\r\nimport \"./extensions/IERC20Metadata.sol\";\r\n\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n            // decrementing then incrementing.\r\n            _balances[to] += amount;\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        unchecked {\r\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n            _balances[account] += amount;\r\n        }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply -= amount;\r\n        }\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/DexToken.sol": {
				"DexToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newBurnRate",
									"type": "uint256"
								}
							],
							"name": "setBurnRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DexToken.sol\":221:1846  contract DexToken is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DexToken.sol\":319:463  constructor() ERC20(\"DexToken\", \"DEX\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":758:874  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x2232bc2a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xeb, 0x0888ab)\n  dup2\n  mstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":833:838  name_ */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":825:830  _name */\n  0x03\n    /* \"contracts/token/ERC20/ERC20.sol\":825:838  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":849:856  _symbol */\n  0x04\n    /* \"contracts/token/ERC20/ERC20.sol\":849:866  _symbol = symbol_ */\n  tag_9\n    /* \"contracts/token/ERC20/ERC20.sol\":859:866  symbol_ */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":849:856  _symbol */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":849:866  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"contracts/security/Pausable.sol\":505:512  _paused */\n  0x05\n    /* \"contracts/security/Pausable.sol\":505:520  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"contracts/access/Ownable.sol\":385:417  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n  caller\n    /* \"contracts/access/Ownable.sol\":385:403  _transferOwnership */\n  tag_15\n    /* \"contracts/access/Ownable.sol\":385:417  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/DexToken.sol\":369:401  _mint(msg.sender, 50 * 10 ** 27) */\n  tag_17\n    /* \"contracts/DexToken.sol\":375:385  msg.sender */\n  caller\n    /* \"contracts/DexToken.sol\":387:400  50 * 10 ** 27 */\n  0xa18f07d736b90be550000000\n    /* \"contracts/DexToken.sol\":369:374  _mint */\n  tag_18\n    /* \"contracts/DexToken.sol\":369:401  _mint(msg.sender, 50 * 10 ** 27) */\n  jump\t// in\ntag_17:\n    /* \"contracts/DexToken.sol\":423:424  3 */\n  0x03\n    /* \"contracts/DexToken.sol\":412:420  burnRate */\n  0x06\n    /* \"contracts/DexToken.sol\":412:424  burnRate = 3 */\n  sstore\n    /* \"contracts/DexToken.sol\":221:1846  contract DexToken is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  jump(tag_54)\n    /* \"contracts/access/Ownable.sol\":1931:2122  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"contracts/access/Ownable.sol\":2024:2030  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/access/Ownable.sol\":2041:2058  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"contracts/access/Ownable.sol\":2024:2030  _owner */\n  0x0100\n    /* \"contracts/access/Ownable.sol\":2041:2058  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/access/Ownable.sol\":2074:2114  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/access/Ownable.sol\":2024:2030  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"contracts/access/Ownable.sol\":2074:2114  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/access/Ownable.sol\":2005:2021  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/access/Ownable.sol\":2074:2114  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/access/Ownable.sol\":1994:2122  {... */\n  pop\n    /* \"contracts/access/Ownable.sol\":1931:2122  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/ERC20.sol\":7554:8102  function _mint(address account, uint256 amount) internal virtual {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token/ERC20/ERC20.sol\":7638:7659  account != address(0) */\n  dup3\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":7630:7695  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2937:2939   */\n  0x20\n    /* \"contracts/token/ERC20/ERC20.sol\":7630:7695  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2919:2940   */\n  mstore\n    /* \"#utility.yul\":2976:2978   */\n  0x1f\n    /* \"#utility.yul\":2956:2974   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2949:2979   */\n  mstore\n    /* \"#utility.yul\":3015:3048   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":2995:3013   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2988:3049   */\n  mstore\n    /* \"#utility.yul\":3066:3084   */\n  0x64\n  add\n    /* \"contracts/token/ERC20/ERC20.sol\":7630:7695  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"contracts/token/ERC20/ERC20.sol\":7708:7757  _beforeTokenTransfer(address(0), account, amount) */\n  tag_26\n    /* \"contracts/token/ERC20/ERC20.sol\":7737:7738  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":7741:7748  account */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":7750:7756  amount */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":7708:7728  _beforeTokenTransfer */\n  tag_27\n    /* \"contracts/token/ERC20/ERC20.sol\":7708:7757  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_26:\n    /* \"contracts/token/ERC20/ERC20.sol\":7786:7792  amount */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":7770:7782  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":7770:7792  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token/ERC20/ERC20.sol\":7941:7959  _balances[account] */\n  dup3\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":7941:7950  _balances */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":7941:7959  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/token/ERC20/ERC20.sol\":7941:7969  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"contracts/token/ERC20/ERC20.sol\":7996:8033  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":3468:3493   */\n  dup5\n  dup2\n  mstore\n    /* \"contracts/token/ERC20/ERC20.sol\":7996:8033  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":3441:3459   */\n  add\n    /* \"contracts/token/ERC20/ERC20.sol\":7996:8033  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/token/ERC20/ERC20.sol\":7554:8102  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DexToken.sol\":614:813  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\ntag_27:\n    /* \"contracts/security/Pausable.sol\":759:778  _requireNotPaused() */\n  tag_35\n    /* \"contracts/security/Pausable.sol\":759:776  _requireNotPaused */\n  tag_36\n    /* \"contracts/security/Pausable.sol\":759:778  _requireNotPaused() */\n  jump\t// in\ntag_35:\n    /* \"contracts/DexToken.sol\":761:805  super._beforeTokenTransfer(from, to, amount) */\n  tag_38\n    /* \"contracts/DexToken.sol\":788:792  from */\n  dup4\n    /* \"contracts/DexToken.sol\":794:796  to */\n  dup4\n    /* \"contracts/DexToken.sol\":798:804  amount */\n  dup4\n    /* \"contracts/DexToken.sol\":761:787  super._beforeTokenTransfer */\n  or(tag_0_104, shl(0x20, tag_38))\n    /* \"contracts/DexToken.sol\":761:805  super._beforeTokenTransfer(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"contracts/DexToken.sol\":614:813  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/security/Pausable.sol\":1313:1421  function _requireNotPaused() internal view virtual {... */\ntag_36:\n    /* \"contracts/security/Pausable.sol\":1225:1232  _paused */\n  and(0xff, sload(0x05))\n    /* \"contracts/security/Pausable.sol\":1383:1392  !paused() */\n  iszero\n    /* \"contracts/security/Pausable.sol\":1375:1413  require(!paused(), \"Pausable: paused\") */\n  tag_44\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3706:3708   */\n  0x20\n    /* \"contracts/security/Pausable.sol\":1375:1413  require(!paused(), \"Pausable: paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3688:3709   */\n  mstore\n    /* \"#utility.yul\":3745:3747   */\n  0x10\n    /* \"#utility.yul\":3725:3743   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3718:3748   */\n  mstore\n  shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n    /* \"#utility.yul\":3764:3782   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3757:3803   */\n  mstore\n    /* \"#utility.yul\":3820:3838   */\n  0x64\n  add\n    /* \"contracts/security/Pausable.sol\":1375:1413  require(!paused(), \"Pausable: paused\") */\n  tag_24\n    /* \"#utility.yul\":3504:3844   */\n  jump\n    /* \"contracts/security/Pausable.sol\":1375:1413  require(!paused(), \"Pausable: paused\") */\ntag_44:\n    /* \"contracts/security/Pausable.sol\":1313:1421  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_49:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_50:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_57:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_58:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_52:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_62\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_62:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_63:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_8:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_69\n  tag_49\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1582:1679   */\n  tag_70\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_71\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_50\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_52\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_74\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_74:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_65)\n    /* \"#utility.yul\":1810:2473   */\ntag_73:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_77:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_77)\ntag_79:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_80:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":3095:3317   */\ntag_29:\n    /* \"#utility.yul\":3160:3169   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3181:3191   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3178:3311   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3233:3243   */\n  0x4e487b71\n    /* \"#utility.yul\":3228:3231   */\n  0xe0\n    /* \"#utility.yul\":3224:3244   */\n  shl\n    /* \"#utility.yul\":3221:3222   */\n  0x00\n    /* \"#utility.yul\":3214:3245   */\n  mstore\n    /* \"#utility.yul\":3268:3272   */\n  0x11\n    /* \"#utility.yul\":3265:3266   */\n  0x04\n    /* \"#utility.yul\":3258:3273   */\n  mstore\n    /* \"#utility.yul\":3296:3300   */\n  0x24\n    /* \"#utility.yul\":3293:3294   */\n  0x00\n    /* \"#utility.yul\":3286:3301   */\n  revert\n    /* \"#utility.yul\":3178:3311   */\ntag_83:\n    /* \"#utility.yul\":3095:3317   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3504:3844   */\ntag_54:\n    /* \"contracts/DexToken.sol\":221:1846  contract DexToken is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DexToken.sol\":221:1846  contract DexToken is ERC20, ERC20Burnable, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbed99850\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x313ce567\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x189d165e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":944:1044  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":3295:3496  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":3295:3496  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":2064:2172  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/token/ERC20/ERC20.sol\":2152:2164  _totalSupply */\n      sload(0x02)\n        /* \"contracts/token/ERC20/ERC20.sol\":2064:2172  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":2064:2172  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_29\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/DexToken.sol\":862:1038  function setBurnRate(uint256 newBurnRate) public onlyOwner {... */\n    tag_6:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/token/ERC20/ERC20.sol\":4076:4371  function transferFrom(... */\n    tag_7:\n      tag_31\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":1906:1999  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"contracts/token/ERC20/ERC20.sol\":1989:1991  18 */\n      0x12\n        /* \"#utility.yul\":2038:2074   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2026:2028   */\n      0x20\n        /* \"#utility.yul\":2011:2029   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":1906:1999  function decimals() public view virtual override returns (uint8) {... */\n      tag_29\n        /* \"#utility.yul\":1896:2080   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":4780:5018  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_31\n      tag_55\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/DexToken.sol\":540:605  function unpause() public onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_59\n      jump\t// in\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":501:592  function burn(uint256 amount) public virtual {... */\n    tag_11:\n      tag_41\n      tag_61\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"contracts/security/Pausable.sol\":1154:1240  function paused() public view virtual returns (bool) {... */\n    tag_12:\n        /* \"contracts/security/Pausable.sol\":1225:1232  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/security/Pausable.sol\":1154:1240  function paused() public view virtual returns (bool) {... */\n      jump(tag_31)\n        /* \"contracts/token/ERC20/ERC20.sol\":2235:2362  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_37\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":2336:2354  _balances[account] */\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":2309:2316  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2336:2354  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":2235:2362  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/access/Ownable.sol\":1312:1415  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_41\n      tag_72\n      jump\t// in\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":911:1075  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_15:\n      tag_41\n      tag_74\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"contracts/DexToken.sol\":471:532  function pause() public onlyOwner {... */\n    tag_16:\n      tag_41\n      tag_77\n      jump\t// in\n        /* \"contracts/access/Ownable.sol\":664:751  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"contracts/access/Ownable.sol\":737:743  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/access/Ownable.sol\":664:751  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"contracts/access/Ownable.sol\":664:751  function owner() public view virtual returns (address) {... */\n      tag_29\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":1163:1267  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_27\n      tag_83\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":5521:5957  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      tag_31\n      tag_86\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2568:2761  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_31\n      tag_90\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/DexToken.sol\":289:312  uint256 public burnRate */\n    tag_21:\n      tag_37\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":2824:2975  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_22:\n      tag_37\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"contracts/access/Ownable.sol\":1570:1771  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_41\n      tag_102\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":944:1044  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"contracts/token/ERC20/ERC20.sol\":998:1011  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1031:1036  _name */\n      0x03\n        /* \"contracts/token/ERC20/ERC20.sol\":1024:1036  return _name */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":944:1044  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3295:3496  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_34:\n        /* \"contracts/token/ERC20/ERC20.sol\":3378:3382  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":3434:3466  _approve(owner, spender, amount) */\n      tag_115\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":3450:3457  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3459:3465  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3434:3442  _approve */\n      tag_116\n        /* \"contracts/token/ERC20/ERC20.sol\":3434:3466  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/token/ERC20/ERC20.sol\":3484:3488  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":3477:3488  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3295:3496  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_112:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DexToken.sol\":862:1038  function setBurnRate(uint256 newBurnRate) public onlyOwner {... */\n    tag_44:\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      tag_119\n        /* \"contracts/access/Ownable.sol\":550:561  _checkOwner */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/DexToken.sol\":955:958  100 */\n      0x64\n        /* \"contracts/DexToken.sol\":940:951  newBurnRate */\n      dup2\n        /* \"contracts/DexToken.sol\":940:958  newBurnRate <= 100 */\n      gt\n      iszero\n        /* \"contracts/DexToken.sol\":932:997  require(newBurnRate <= 100, \"Burn rate cannot be more than 100%\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3336:3338   */\n      0x20\n        /* \"contracts/DexToken.sol\":932:997  require(newBurnRate <= 100, \"Burn rate cannot be more than 100%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3318:3339   */\n      mstore\n        /* \"#utility.yul\":3375:3377   */\n      0x22\n        /* \"#utility.yul\":3355:3373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3348:3378   */\n      mstore\n        /* \"#utility.yul\":3414:3448   */\n      0x4275726e20726174652063616e6e6f74206265206d6f7265207468616e203130\n        /* \"#utility.yul\":3394:3412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3387:3449   */\n      mstore\n      shl(0xf0, 0x3025)\n        /* \"#utility.yul\":3465:3483   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3458:3490   */\n      mstore\n        /* \"#utility.yul\":3507:3526   */\n      0x84\n      add\n        /* \"contracts/DexToken.sol\":932:997  require(newBurnRate <= 100, \"Burn rate cannot be more than 100%\") */\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/DexToken.sol\":1008:1016  burnRate */\n      0x06\n        /* \"contracts/DexToken.sol\":1008:1030  burnRate = newBurnRate */\n      sstore\n        /* \"contracts/DexToken.sol\":862:1038  function setBurnRate(uint256 newBurnRate) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4076:4371  function transferFrom(... */\n    tag_48:\n        /* \"contracts/token/ERC20/ERC20.sol\":4207:4211  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":4265:4303  _spendAllowance(from, spender, amount) */\n      tag_127\n        /* \"contracts/token/ERC20/ERC20.sol\":4281:4285  from */\n      dup6\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":4296:4302  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4265:4280  _spendAllowance */\n      tag_128\n        /* \"contracts/token/ERC20/ERC20.sol\":4265:4303  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/token/ERC20/ERC20.sol\":4314:4341  _transfer(from, to, amount) */\n      tag_129\n        /* \"contracts/token/ERC20/ERC20.sol\":4324:4328  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4330:4332  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4334:4340  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4314:4323  _transfer */\n      tag_130\n        /* \"contracts/token/ERC20/ERC20.sol\":4314:4341  _transfer(from, to, amount) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":4359:4363  true */\n      0x01\n      swap5\n        /* \"contracts/token/ERC20/ERC20.sol\":4076:4371  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4780:5018  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_56:\n        /* \"contracts/token/ERC20/ERC20.sol\":4868:4872  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":4924:4988  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_115\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":4940:4947  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4977:4987  addedValue */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4949:4974  allowance(owner, spender) */\n      tag_135\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4940:4947  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4949:4958  allowance */\n      tag_99\n        /* \"contracts/token/ERC20/ERC20.sol\":4949:4974  allowance(owner, spender) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/token/ERC20/ERC20.sol\":4949:4987  allowance(owner, spender) + addedValue */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/token/ERC20/ERC20.sol\":4924:4932  _approve */\n      tag_116\n        /* \"contracts/token/ERC20/ERC20.sol\":4924:4988  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/DexToken.sol\":540:605  function unpause() public onlyOwner {... */\n    tag_59:\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      tag_139\n        /* \"contracts/access/Ownable.sol\":550:561  _checkOwner */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/DexToken.sol\":587:597  _unpause() */\n      tag_141\n        /* \"contracts/DexToken.sol\":587:595  _unpause */\n      tag_142\n        /* \"contracts/DexToken.sol\":587:597  _unpause() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/DexToken.sol\":540:605  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":501:592  function burn(uint256 amount) public virtual {... */\n    tag_62:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":557:584  _burn(_msgSender(), amount) */\n      tag_144\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":577:583  amount */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":557:562  _burn */\n      tag_146\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":557:584  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":501:592  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1312:1415  function renounceOwnership() public virtual onlyOwner {... */\n    tag_72:\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      tag_150\n        /* \"contracts/access/Ownable.sol\":550:561  _checkOwner */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/access/Ownable.sol\":1377:1407  _transferOwnership(address(0)) */\n      tag_141\n        /* \"contracts/access/Ownable.sol\":1404:1405  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1377:1395  _transferOwnership */\n      tag_153\n        /* \"contracts/access/Ownable.sol\":1377:1407  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":911:1075  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_75:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":988:1034  _spendAllowance(account, _msgSender(), amount) */\n      tag_155\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1004:1011  account */\n      dup3\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1027:1033  amount */\n      dup4\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":988:1003  _spendAllowance */\n      tag_128\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":988:1034  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1045:1067  _burn(account, amount) */\n      tag_157\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1051:1058  account */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1060:1066  amount */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1045:1050  _burn */\n      tag_146\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1045:1067  _burn(account, amount) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":911:1075  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DexToken.sol\":471:532  function pause() public onlyOwner {... */\n    tag_77:\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      tag_159\n        /* \"contracts/access/Ownable.sol\":550:561  _checkOwner */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/DexToken.sol\":516:524  _pause() */\n      tag_141\n        /* \"contracts/DexToken.sol\":516:522  _pause */\n      tag_162\n        /* \"contracts/DexToken.sol\":516:524  _pause() */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":1163:1267  function symbol() public view virtual override returns (string memory) {... */\n    tag_83:\n        /* \"contracts/token/ERC20/ERC20.sol\":1219:1232  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1252:1259  _symbol */\n      0x04\n        /* \"contracts/token/ERC20/ERC20.sol\":1245:1259  return _symbol */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":5521:5957  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_87:\n        /* \"contracts/token/ERC20/ERC20.sol\":5614:5618  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":5614:5618  bool */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5697:5722  allowance(owner, spender) */\n      tag_172\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5714:5721  spender */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":5697:5706  allowance */\n      tag_99\n        /* \"contracts/token/ERC20/ERC20.sol\":5697:5722  allowance(owner, spender) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/token/ERC20/ERC20.sol\":5670:5722  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5761:5776  subtractedValue */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5741:5757  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5741:5776  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":5733:5818  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4001:4003   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":5733:5818  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3983:4004   */\n      mstore\n        /* \"#utility.yul\":4040:4042   */\n      0x25\n        /* \"#utility.yul\":4020:4038   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4013:4043   */\n      mstore\n        /* \"#utility.yul\":4079:4113   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4059:4077   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4052:4114   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4130:4148   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4123:4158   */\n      mstore\n        /* \"#utility.yul\":4175:4194   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":5733:5818  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_123\n        /* \"#utility.yul\":3799:4200   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":5733:5818  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_173:\n        /* \"contracts/token/ERC20/ERC20.sol\":5854:5914  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_129\n        /* \"contracts/token/ERC20/ERC20.sol\":5863:5868  owner */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5870:5877  spender */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":5898:5913  subtractedValue */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":5879:5895  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":5879:5913  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5854:5862  _approve */\n      tag_116\n        /* \"contracts/token/ERC20/ERC20.sol\":5854:5914  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2568:2761  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_91:\n        /* \"contracts/token/ERC20/ERC20.sol\":2647:2651  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":2703:2731  _transfer(owner, to, amount) */\n      tag_115\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":2720:2722  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":2724:2730  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":2703:2712  _transfer */\n      tag_130\n        /* \"contracts/token/ERC20/ERC20.sol\":2703:2731  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2824:2975  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2958  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":2913:2920  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2958  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2951  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2958  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2967  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":2824:2975  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1570:1771  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      tag_182\n        /* \"contracts/access/Ownable.sol\":550:561  _checkOwner */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":550:563  _checkOwner() */\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/Ownable.sol\":1659:1681  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1651:1724  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4407:4409   */\n      0x20\n        /* \"contracts/access/Ownable.sol\":1651:1724  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4389:4410   */\n      mstore\n        /* \"#utility.yul\":4446:4448   */\n      0x26\n        /* \"#utility.yul\":4426:4444   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4419:4449   */\n      mstore\n        /* \"#utility.yul\":4485:4519   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4465:4483   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4458:4520   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4536:4554   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4529:4565   */\n      mstore\n        /* \"#utility.yul\":4582:4601   */\n      0x84\n      add\n        /* \"contracts/access/Ownable.sol\":1651:1724  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_123\n        /* \"#utility.yul\":4205:4607   */\n      jump\n        /* \"contracts/access/Ownable.sol\":1651:1724  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_184:\n        /* \"contracts/access/Ownable.sol\":1735:1763  _transferOwnership(newOwner) */\n      tag_144\n        /* \"contracts/access/Ownable.sol\":1754:1762  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":1735:1753  _transferOwnership */\n      tag_153\n        /* \"contracts/access/Ownable.sol\":1735:1763  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":11272:11397  function _beforeTokenTransfer(... */\n    tag_104:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":9548:9928  function _approve(... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":9684:9703  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9676:9744  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4814:4816   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":9676:9744  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4796:4817   */\n      mstore\n        /* \"#utility.yul\":4853:4855   */\n      0x24\n        /* \"#utility.yul\":4833:4851   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4826:4856   */\n      mstore\n        /* \"#utility.yul\":4892:4926   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4872:4890   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4865:4927   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4943:4961   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4936:4970   */\n      mstore\n        /* \"#utility.yul\":4987:5006   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":9676:9744  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_123\n        /* \"#utility.yul\":4612:5012   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":9676:9744  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":9763:9784  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9755:9823  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5219:5221   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":9755:9823  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5201:5222   */\n      mstore\n        /* \"#utility.yul\":5258:5260   */\n      0x22\n        /* \"#utility.yul\":5238:5256   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5231:5261   */\n      mstore\n        /* \"#utility.yul\":5297:5331   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5277:5295   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5270:5332   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5348:5366   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5341:5373   */\n      mstore\n        /* \"#utility.yul\":5390:5409   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":9755:9823  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_123\n        /* \"#utility.yul\":5017:5415   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":9755:9823  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9854  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9847  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9854  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9863  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9872  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":9888:9920  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":9888:9920  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":9888:9920  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":9548:9928  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":829:961  function _checkOwner() internal view virtual {... */\n    tag_120:\n        /* \"contracts/access/Ownable.sol\":737:743  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":893:916  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":885:953  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5622:5624   */\n      0x20\n        /* \"contracts/access/Ownable.sol\":885:953  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5604:5625   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5641:5659   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5634:5664   */\n      mstore\n        /* \"#utility.yul\":5700:5734   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5680:5698   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5673:5735   */\n      mstore\n        /* \"#utility.yul\":5752:5770   */\n      0x64\n      add\n        /* \"contracts/access/Ownable.sol\":885:953  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_123\n        /* \"#utility.yul\":5420:5776   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":10219:10672  function _spendAllowance(... */\n    tag_128:\n        /* \"contracts/token/ERC20/ERC20.sol\":10354:10378  uint256 currentAllowance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10381:10406  allowance(owner, spender) */\n      tag_205\n        /* \"contracts/token/ERC20/ERC20.sol\":10391:10396  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10398:10405  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10381:10390  allowance */\n      tag_99\n        /* \"contracts/token/ERC20/ERC20.sol\":10381:10406  allowance(owner, spender) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/token/ERC20/ERC20.sol\":10354:10406  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"contracts/token/ERC20/ERC20.sol\":10421:10437  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10421:10458  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/token/ERC20/ERC20.sol\":10417:10665  if (currentAllowance != type(uint256).max) {... */\n      tag_210\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10503:10509  amount */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10483:10499  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10483:10509  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":10475:10543  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5983:5985   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":10475:10543  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5965:5986   */\n      mstore\n        /* \"#utility.yul\":6022:6024   */\n      0x1d\n        /* \"#utility.yul\":6002:6020   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5995:6025   */\n      mstore\n        /* \"#utility.yul\":6061:6092   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":6041:6059   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6034:6093   */\n      mstore\n        /* \"#utility.yul\":6110:6128   */\n      0x64\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":10475:10543  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_123\n        /* \"#utility.yul\":5781:6134   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":10475:10543  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_207:\n        /* \"contracts/token/ERC20/ERC20.sol\":10587:10638  _approve(owner, spender, currentAllowance - amount) */\n      tag_210\n        /* \"contracts/token/ERC20/ERC20.sol\":10596:10601  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10603:10610  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10631:10637  amount */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10612:10628  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10612:10637  currentAllowance - amount */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":10587:10595  _approve */\n      tag_116\n        /* \"contracts/token/ERC20/ERC20.sol\":10587:10638  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/token/ERC20/ERC20.sol\":10343:10672  {... */\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":10219:10672  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DexToken.sol\":1139:1843  function _transfer(address sender, address recipient, uint256 amount) internal virtual override {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DexToken.sol\":1254:1274  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/DexToken.sol\":1246:1316  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_214\n      jump\t// in\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DexToken.sol\":1335:1358  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/DexToken.sol\":1327:1398  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_217\n      jump\t// in\n    tag_215:\n        /* \"contracts/DexToken.sol\":1480:1498  uint256 burnAmount */\n      0x00\n        /* \"contracts/DexToken.sol\":1521:1524  100 */\n      0x64\n        /* \"contracts/DexToken.sol\":1510:1518  burnRate */\n      sload(0x06)\n        /* \"contracts/DexToken.sol\":1501:1507  amount */\n      dup4\n        /* \"contracts/DexToken.sol\":1501:1518  amount * burnRate */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"contracts/DexToken.sol\":1501:1524  amount * burnRate / 100 */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"contracts/DexToken.sol\":1480:1524  uint256 burnAmount = amount * burnRate / 100 */\n      swap1\n      pop\n        /* \"contracts/DexToken.sol\":1602:1620  uint256 sendAmount */\n      0x00\n        /* \"contracts/DexToken.sol\":1623:1642  amount - burnAmount */\n      tag_222\n        /* \"contracts/DexToken.sol\":1480:1524  uint256 burnAmount = amount * burnRate / 100 */\n      dup3\n        /* \"contracts/DexToken.sol\":1623:1629  amount */\n      dup5\n        /* \"contracts/DexToken.sol\":1623:1642  amount - burnAmount */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"contracts/DexToken.sol\":1602:1642  uint256 sendAmount = amount - burnAmount */\n      swap1\n      pop\n        /* \"contracts/DexToken.sol\":1699:1724  _burn(sender, burnAmount) */\n      tag_224\n        /* \"contracts/DexToken.sol\":1705:1711  sender */\n      dup6\n        /* \"contracts/DexToken.sol\":1713:1723  burnAmount */\n      dup4\n        /* \"contracts/DexToken.sol\":1699:1704  _burn */\n      tag_146\n        /* \"contracts/DexToken.sol\":1699:1724  _burn(sender, burnAmount) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/DexToken.sol\":1789:1835  super._transfer(sender, recipient, sendAmount) */\n      tag_225\n        /* \"contracts/DexToken.sol\":1805:1811  sender */\n      dup6\n        /* \"contracts/DexToken.sol\":1813:1822  recipient */\n      dup6\n        /* \"contracts/DexToken.sol\":1824:1834  sendAmount */\n      dup4\n        /* \"contracts/DexToken.sol\":1789:1804  super._transfer */\n      tag_226\n        /* \"contracts/DexToken.sol\":1789:1835  super._transfer(sender, recipient, sendAmount) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/DexToken.sol\":1235:1843  {... */\n      pop\n      pop\n        /* \"contracts/DexToken.sol\":1139:1843  function _transfer(address sender, address recipient, uint256 amount) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/Pausable.sol\":2009:2129  function _unpause() internal virtual whenPaused {... */\n    tag_142:\n        /* \"contracts/security/Pausable.sol\":1018:1034  _requirePaused() */\n      tag_228\n        /* \"contracts/security/Pausable.sol\":1018:1032  _requirePaused */\n      tag_229\n        /* \"contracts/security/Pausable.sol\":1018:1034  _requirePaused() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/security/Pausable.sol\":2068:2075  _paused */\n      0x05\n        /* \"contracts/security/Pausable.sol\":2068:2083  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/security/Pausable.sol\":2099:2121  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/security/Pausable.sol\":2108:2120  _msgSender() */\n    tag_231:\n        /* \"contracts/security/Pausable.sol\":2099:2121  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"contracts/security/Pausable.sol\":2099:2121  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/security/Pausable.sol\":2009:2129  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":8435:9110  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":8519:8540  account != address(0) */\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":8511:8578  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7679:7681   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":8511:8578  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7661:7682   */\n      mstore\n        /* \"#utility.yul\":7718:7720   */\n      0x21\n        /* \"#utility.yul\":7698:7716   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7691:7721   */\n      mstore\n        /* \"#utility.yul\":7757:7791   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":7737:7755   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7730:7792   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7808:7826   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7801:7832   */\n      mstore\n        /* \"#utility.yul\":7849:7868   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":8511:8578  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_123\n        /* \"#utility.yul\":7477:7874   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":8511:8578  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_234:\n        /* \"contracts/token/ERC20/ERC20.sol\":8591:8640  _beforeTokenTransfer(account, address(0), amount) */\n      tag_237\n        /* \"contracts/token/ERC20/ERC20.sol\":8612:8619  account */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":8629:8630  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":8633:8639  amount */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8591:8611  _beforeTokenTransfer */\n      tag_238\n        /* \"contracts/token/ERC20/ERC20.sol\":8591:8640  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":8678:8696  _balances[account] */\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":8653:8675  uint256 accountBalance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":8678:8696  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":8715:8739  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":8707:8778  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8081:8083   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":8707:8778  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8063:8084   */\n      mstore\n        /* \"#utility.yul\":8120:8122   */\n      0x22\n        /* \"#utility.yul\":8100:8118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8093:8123   */\n      mstore\n        /* \"#utility.yul\":8159:8193   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":8139:8157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8132:8194   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8210:8228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8203:8235   */\n      mstore\n        /* \"#utility.yul\":8252:8271   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":8707:8778  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_123\n        /* \"#utility.yul\":7879:8277   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":8707:8778  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":8814:8832  _balances[account] */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":8814:8823  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":8814:8832  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":8835:8858  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":8814:8858  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":8953:8965  _totalSupply */\n      0x02\n        /* \"contracts/token/ERC20/ERC20.sol\":8953:8975  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":9004:9041  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":8814:8823  _balances */\n      swap2\n      swap3\n        /* \"contracts/token/ERC20/ERC20.sol\":8814:8832  _balances[account] */\n      swap2\n        /* \"contracts/token/ERC20/ERC20.sol\":9004:9041  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":9004:9041  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":11272:11397  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1931:2122  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_153:\n        /* \"contracts/access/Ownable.sol\":2024:2030  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/Ownable.sol\":2041:2058  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":2024:2030  _owner */\n      0x0100\n        /* \"contracts/access/Ownable.sol\":2041:2058  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"contracts/access/Ownable.sol\":2074:2114  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/access/Ownable.sol\":2024:2030  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"contracts/access/Ownable.sol\":2074:2114  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/access/Ownable.sol\":2005:2021  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/access/Ownable.sol\":2074:2114  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/access/Ownable.sol\":1994:2122  {... */\n      pop\n        /* \"contracts/access/Ownable.sol\":1931:2122  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/security/Pausable.sol\":1750:1868  function _pause() internal virtual whenNotPaused {... */\n    tag_162:\n        /* \"contracts/security/Pausable.sol\":759:778  _requireNotPaused() */\n      tag_247\n        /* \"contracts/security/Pausable.sol\":759:776  _requireNotPaused */\n      tag_248\n        /* \"contracts/security/Pausable.sol\":759:778  _requireNotPaused() */\n      jump\t// in\n    tag_247:\n        /* \"contracts/security/Pausable.sol\":1810:1817  _paused */\n      0x05\n        /* \"contracts/security/Pausable.sol\":1810:1824  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/security/Pausable.sol\":1820:1824  true */\n      0x01\n        /* \"contracts/security/Pausable.sol\":1810:1824  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/security/Pausable.sol\":1840:1860  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/security/Pausable.sol\":1847:1859  _msgSender() */\n      tag_231\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n      swap1\n        /* \"contracts/utils/Context.sol\":93:191  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":6427:7267  function _transfer(... */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":6558:6576  from != address(0) */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6550:6618  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_214\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":6637:6653  to != address(0) */\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6629:6693  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_217\n      jump\t// in\n    tag_255:\n        /* \"contracts/token/ERC20/ERC20.sol\":6706:6744  _beforeTokenTransfer(from, to, amount) */\n      tag_257\n        /* \"contracts/token/ERC20/ERC20.sol\":6727:6731  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6733:6735  to */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6737:6743  amount */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6706:6726  _beforeTokenTransfer */\n      tag_238\n        /* \"contracts/token/ERC20/ERC20.sol\":6706:6744  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":6779:6794  _balances[from] */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6757:6776  uint256 fromBalance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6779:6794  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":6813:6834  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":6805:6877  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8484:8486   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":6805:6877  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8466:8487   */\n      mstore\n        /* \"#utility.yul\":8523:8525   */\n      0x26\n        /* \"#utility.yul\":8503:8521   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8496:8526   */\n      mstore\n        /* \"#utility.yul\":8562:8596   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":8542:8560   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8535:8597   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":8613:8631   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8606:8642   */\n      mstore\n        /* \"#utility.yul\":8659:8678   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":6805:6877  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_123\n        /* \"#utility.yul\":8282:8684   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":6805:6877  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":6913:6928  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6913:6922  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6913:6928  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":6931:6951  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":6913:6951  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":7131:7144  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":7131:7154  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":7183:7209  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":7131:7144  _balances[to] */\n      swap1\n      swap3\n        /* \"contracts/token/ERC20/ERC20.sol\":7183:7209  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":7183:7209  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":7222:7259  _afterTokenTransfer(from, to, amount) */\n      tag_210\n        /* \"contracts/token/ERC20/ERC20.sol\":11272:11397  function _beforeTokenTransfer(... */\n      jump\n        /* \"contracts/security/Pausable.sol\":1498:1606  function _requirePaused() internal view virtual {... */\n    tag_229:\n        /* \"contracts/security/Pausable.sol\":1225:1232  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/security/Pausable.sol\":1557:1598  require(paused(), \"Pausable: not paused\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8891:8893   */\n      0x20\n        /* \"contracts/security/Pausable.sol\":1557:1598  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8873:8894   */\n      mstore\n        /* \"#utility.yul\":8930:8932   */\n      0x14\n        /* \"#utility.yul\":8910:8928   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8903:8933   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":8949:8967   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8942:8992   */\n      mstore\n        /* \"#utility.yul\":9009:9027   */\n      0x64\n      add\n        /* \"contracts/security/Pausable.sol\":1557:1598  require(paused(), \"Pausable: not paused\") */\n      tag_123\n        /* \"#utility.yul\":8689:9033   */\n      jump\n        /* \"contracts/DexToken.sol\":614:813  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n    tag_238:\n        /* \"contracts/security/Pausable.sol\":759:778  _requireNotPaused() */\n      tag_104\n        /* \"contracts/security/Pausable.sol\":1313:1421  function _requireNotPaused() internal view virtual {... */\n    tag_248:\n        /* \"contracts/security/Pausable.sol\":1225:1232  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/security/Pausable.sol\":1383:1392  !paused() */\n      iszero\n        /* \"contracts/security/Pausable.sol\":1375:1413  require(!paused(), \"Pausable: paused\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9240:9242   */\n      0x20\n        /* \"contracts/security/Pausable.sol\":1375:1413  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9222:9243   */\n      mstore\n        /* \"#utility.yul\":9279:9281   */\n      0x10\n        /* \"#utility.yul\":9259:9277   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9252:9282   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":9298:9316   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9291:9337   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x64\n      add\n        /* \"contracts/security/Pausable.sol\":1375:1413  require(!paused(), \"Pausable: paused\") */\n      tag_123\n        /* \"#utility.yul\":9038:9378   */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_30:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_282:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_282)\n    tag_284:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_278:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_286:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_33:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_288:\n        /* \"#utility.yul\":913:942   */\n      tag_289\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_278\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1558   */\n    tag_43:\n        /* \"#utility.yul\":1437:1443   */\n      0x00\n        /* \"#utility.yul\":1490:1492   */\n      0x20\n        /* \"#utility.yul\":1478:1487   */\n      dup3\n        /* \"#utility.yul\":1469:1476   */\n      dup5\n        /* \"#utility.yul\":1465:1488   */\n      sub\n        /* \"#utility.yul\":1461:1493   */\n      slt\n        /* \"#utility.yul\":1458:1510   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1503:1504   */\n      dup1\n        /* \"#utility.yul\":1496:1508   */\n      revert\n        /* \"#utility.yul\":1458:1510   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":1529:1552   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1378:1558   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:1891   */\n    tag_47:\n        /* \"#utility.yul\":1640:1646   */\n      0x00\n        /* \"#utility.yul\":1648:1654   */\n      dup1\n        /* \"#utility.yul\":1656:1662   */\n      0x00\n        /* \"#utility.yul\":1709:1711   */\n      0x60\n        /* \"#utility.yul\":1697:1706   */\n      dup5\n        /* \"#utility.yul\":1688:1695   */\n      dup7\n        /* \"#utility.yul\":1684:1707   */\n      sub\n        /* \"#utility.yul\":1680:1712   */\n      slt\n        /* \"#utility.yul\":1677:1729   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":1725:1726   */\n      0x00\n        /* \"#utility.yul\":1722:1723   */\n      dup1\n        /* \"#utility.yul\":1715:1727   */\n      revert\n        /* \"#utility.yul\":1677:1729   */\n    tag_295:\n        /* \"#utility.yul\":1748:1777   */\n      tag_296\n        /* \"#utility.yul\":1767:1776   */\n      dup5\n        /* \"#utility.yul\":1748:1777   */\n      tag_278\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1738:1777   */\n      swap3\n      pop\n        /* \"#utility.yul\":1796:1834   */\n      tag_297\n        /* \"#utility.yul\":1830:1832   */\n      0x20\n        /* \"#utility.yul\":1819:1828   */\n      dup6\n        /* \"#utility.yul\":1815:1833   */\n      add\n        /* \"#utility.yul\":1796:1834   */\n      tag_278\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1786:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1881:1883   */\n      0x40\n        /* \"#utility.yul\":1870:1879   */\n      dup5\n        /* \"#utility.yul\":1866:1884   */\n      add\n        /* \"#utility.yul\":1853:1885   */\n      calldataload\n        /* \"#utility.yul\":1843:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1563:1891   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_68:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_300:\n        /* \"#utility.yul\":2236:2265   */\n      tag_301\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_278\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_98:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_304:\n        /* \"#utility.yul\":2652:2681   */\n      tag_305\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_278\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_306\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_278\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_107:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_308:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_309:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3537:3664   */\n    tag_279:\n        /* \"#utility.yul\":3598:3608   */\n      0x4e487b71\n        /* \"#utility.yul\":3593:3596   */\n      0xe0\n        /* \"#utility.yul\":3589:3609   */\n      shl\n        /* \"#utility.yul\":3586:3587   */\n      0x00\n        /* \"#utility.yul\":3579:3610   */\n      mstore\n        /* \"#utility.yul\":3629:3633   */\n      0x11\n        /* \"#utility.yul\":3626:3627   */\n      0x04\n        /* \"#utility.yul\":3619:3634   */\n      mstore\n        /* \"#utility.yul\":3653:3657   */\n      0x24\n        /* \"#utility.yul\":3650:3651   */\n      0x00\n        /* \"#utility.yul\":3643:3658   */\n      revert\n        /* \"#utility.yul\":3669:3794   */\n    tag_137:\n        /* \"#utility.yul\":3734:3743   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3755:3765   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3752:3788   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":3768:3786   */\n      tag_112\n      tag_279\n      jump\t// in\n        /* \"#utility.yul\":6139:6540   */\n    tag_214:\n        /* \"#utility.yul\":6341:6343   */\n      0x20\n        /* \"#utility.yul\":6323:6344   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6380:6382   */\n      0x25\n        /* \"#utility.yul\":6360:6378   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6353:6383   */\n      mstore\n        /* \"#utility.yul\":6419:6453   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6414:6416   */\n      0x40\n        /* \"#utility.yul\":6399:6417   */\n      dup3\n      add\n        /* \"#utility.yul\":6392:6454   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6485:6487   */\n      0x60\n        /* \"#utility.yul\":6470:6488   */\n      dup3\n      add\n        /* \"#utility.yul\":6463:6498   */\n      mstore\n        /* \"#utility.yul\":6530:6533   */\n      0x80\n        /* \"#utility.yul\":6515:6534   */\n      add\n      swap1\n        /* \"#utility.yul\":6139:6540   */\n      jump\t// out\n        /* \"#utility.yul\":6545:6944   */\n    tag_217:\n        /* \"#utility.yul\":6747:6749   */\n      0x20\n        /* \"#utility.yul\":6729:6750   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6786:6788   */\n      0x23\n        /* \"#utility.yul\":6766:6784   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6759:6789   */\n      mstore\n        /* \"#utility.yul\":6825:6859   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6820:6822   */\n      0x40\n        /* \"#utility.yul\":6805:6823   */\n      dup3\n      add\n        /* \"#utility.yul\":6798:6860   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6891:6893   */\n      0x60\n        /* \"#utility.yul\":6876:6894   */\n      dup3\n      add\n        /* \"#utility.yul\":6869:6902   */\n      mstore\n        /* \"#utility.yul\":6934:6937   */\n      0x80\n        /* \"#utility.yul\":6919:6938   */\n      add\n      swap1\n        /* \"#utility.yul\":6545:6944   */\n      jump\t// out\n        /* \"#utility.yul\":6949:7117   */\n    tag_219:\n        /* \"#utility.yul\":7022:7031   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7053:7062   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7070:7085   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7064:7086   */\n      dup5\n      eq\n        /* \"#utility.yul\":7050:7087   */\n      or\n        /* \"#utility.yul\":7040:7111   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":7091:7109   */\n      tag_112\n      tag_279\n      jump\t// in\n        /* \"#utility.yul\":7122:7339   */\n    tag_221:\n        /* \"#utility.yul\":7162:7163   */\n      0x00\n        /* \"#utility.yul\":7188:7189   */\n      dup3\n        /* \"#utility.yul\":7178:7310   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":7232:7242   */\n      0x4e487b71\n        /* \"#utility.yul\":7227:7230   */\n      0xe0\n        /* \"#utility.yul\":7223:7243   */\n      shl\n        /* \"#utility.yul\":7220:7221   */\n      0x00\n        /* \"#utility.yul\":7213:7244   */\n      mstore\n        /* \"#utility.yul\":7267:7271   */\n      0x12\n        /* \"#utility.yul\":7264:7265   */\n      0x04\n        /* \"#utility.yul\":7257:7272   */\n      mstore\n        /* \"#utility.yul\":7295:7299   */\n      0x24\n        /* \"#utility.yul\":7292:7293   */\n      0x00\n        /* \"#utility.yul\":7285:7300   */\n      revert\n        /* \"#utility.yul\":7178:7310   */\n    tag_327:\n      pop\n        /* \"#utility.yul\":7324:7333   */\n      div\n      swap1\n        /* \"#utility.yul\":7122:7339   */\n      jump\t// out\n        /* \"#utility.yul\":7344:7472   */\n    tag_223:\n        /* \"#utility.yul\":7411:7420   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7432:7443   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7429:7466   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":7446:7464   */\n      tag_112\n      tag_279\n      jump\t// in\n\n    auxdata: 0xa26469706673582212202128cdb1b0c4c5c77f051c129a10690cc0b6106fe20610c1915332c73364a06c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_177": {
									"entryPoint": null,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_292": {
									"entryPoint": null,
									"id": 292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_417": {
									"entryPoint": null,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_76": {
									"entryPoint": 473,
									"id": 76,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_947": {
									"entryPoint": null,
									"id": 947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_776": {
									"entryPoint": 260,
									"id": 776,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1117": {
									"entryPoint": null,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_329": {
									"entryPoint": 512,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_265": {
									"entryPoint": 170,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@paused_317": {
									"entryPoint": null,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3846:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:8"
															},
															"nodeType": "YulIf",
															"src": "289:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:8"
															},
															"nodeType": "YulIf",
															"src": "359:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													}
												],
												"src": "146:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:8",
														"type": ""
													}
												],
												"src": "531:121:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:8"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:8",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:8"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:8"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:8"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:8"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:8"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:8",
																			"statements": []
																		},
																		"src": "1104:82:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:8"
															},
															"nodeType": "YulIf",
															"src": "748:448:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:8",
														"type": ""
													}
												],
												"src": "657:545:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:8",
														"type": ""
													}
												],
												"src": "1207:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:8"
															},
															"nodeType": "YulIf",
															"src": "1517:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:8",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:8"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:8",
																					"statements": []
																				},
																				"src": "1964:236:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:8"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:8",
														"type": ""
													}
												],
												"src": "1378:1352:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2909:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2919:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2919:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2960:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2971:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2956:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2956:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2976:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2949:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2999:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:18:8"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3015:33:8",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2988:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2988:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3058:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3070:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3081:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3058:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2886:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2900:4:8",
														"type": ""
													}
												],
												"src": "2735:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3143:174:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3153:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3164:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3167:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3160:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3160:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3200:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3221:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3228:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3233:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3224:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3224:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3214:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3214:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3214:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3265:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3268:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3258:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3258:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3258:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3293:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3296:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3286:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3286:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3286:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3184:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3187:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3181:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:10:8"
															},
															"nodeType": "YulIf",
															"src": "3178:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3126:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3129:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3135:3:8",
														"type": ""
													}
												],
												"src": "3095:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3423:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3433:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3445:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3441:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3441:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3433:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3475:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3486:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3468:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3392:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3403:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3414:4:8",
														"type": ""
													}
												],
												"src": "3322:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3678:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3695:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3706:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3688:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3688:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3740:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3725:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3725:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3745:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3768:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3779:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3764:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3764:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3784:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3757:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3757:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3812:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3824:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3835:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3812:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3655:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3669:4:8",
														"type": ""
													}
												],
												"src": "3504:340:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051806040016040528060088152602001672232bc2a37b5b2b760c11b815250604051806040016040528060038152602001620888ab60eb1b8152508160039081620000609190620002ee565b5060046200006f8282620002ee565b50506005805460ff19169055506200008733620000aa565b6200009f336ba18f07d736b90be55000000062000104565b6003600655620003e2565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001605760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200016e60008383620001d9565b8060026000828254620001829190620003ba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b620001e362000200565b620001fb838383620001fb60201b620005c41760201c565b505050565b60055460ff1615620002485760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000157565b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027557607f821691505b6020821081036200029657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001fb57600081815260208120601f850160051c81016020861015620002c55750805b601f850160051c820191505b81811015620002e657828155600101620002d1565b505050505050565b81516001600160401b038111156200030a576200030a6200024a565b62000322816200031b845462000260565b846200029c565b602080601f8311600181146200035a5760008415620003415750858301515b600019600386901b1c1916600185901b178555620002e6565b600085815260208120601f198616915b828110156200038b578886015182559484019460019091019084016200036a565b5085821015620003aa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003dc57634e487b7160e01b600052601160045260246000fd5b92915050565b610ef580620003f26000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610274578063a457c2d71461027c578063a9059cbb1461028f578063bed99850146102a2578063dd62ed3e146102ab578063f2fde38b146102be57600080fd5b806370a08231146101ff578063715018a61461022857806379cc6790146102305780638456cb59146102435780638da5cb5b1461024b57600080fd5b8063313ce567116100ff578063313ce567146101b757806339509351146101c65780633f4ba83a146101d957806342966c68146101e15780635c975abb146101f457600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d578063189d165e1461018f57806323b872dd146101a4575b600080fd5b6101446102d1565b6040516101519190610c4a565b60405180910390f35b61016d610168366004610cb4565b610363565b6040519015158152602001610151565b6002545b604051908152602001610151565b6101a261019d366004610cde565b61037d565b005b61016d6101b2366004610cf7565b6103eb565b60405160128152602001610151565b61016d6101d4366004610cb4565b61040f565b6101a2610431565b6101a26101ef366004610cde565b610443565b60055460ff1661016d565b61018161020d366004610d33565b6001600160a01b031660009081526020819052604090205490565b6101a2610450565b6101a261023e366004610cb4565b610462565b6101a261047b565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610151565b61014461048b565b61016d61028a366004610cb4565b61049a565b61016d61029d366004610cb4565b610515565b61018160065481565b6101816102b9366004610d55565b610523565b6101a26102cc366004610d33565b61054e565b6060600380546102e090610d88565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90610d88565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b5050505050905090565b6000336103718185856105c9565b60019150505b92915050565b6103856106ed565b60648111156103e65760405162461bcd60e51b815260206004820152602260248201527f4275726e20726174652063616e6e6f74206265206d6f7265207468616e203130604482015261302560f01b60648201526084015b60405180910390fd5b600655565b6000336103f985828561074d565b6104048585856107c7565b506001949350505050565b6000336103718185856104228383610523565b61042c9190610dd8565b6105c9565b6104396106ed565b61044161085b565b565b61044d33826108ad565b50565b6104586106ed565b61044160006109eb565b61046d82338361074d565b61047782826108ad565b5050565b6104836106ed565b610441610a45565b6060600480546102e090610d88565b600033816104a88286610523565b9050838110156105085760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103dd565b61040482868684036105c9565b6000336103718185856107c7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105566106ed565b6001600160a01b0381166105bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b61044d816109eb565b505050565b6001600160a01b03831661062b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dd565b6001600160a01b03821661068c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b036101009091041633146104415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103dd565b60006107598484610523565b905060001981146107c157818110156107b45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103dd565b6107c184848484036105c9565b50505050565b6001600160a01b0383166107ed5760405162461bcd60e51b81526004016103dd90610deb565b6001600160a01b0382166108135760405162461bcd60e51b81526004016103dd90610e30565b60006064600654836108259190610e73565b61082f9190610e8a565b9050600061083d8284610eac565b905061084985836108ad565b610854858583610a82565b5050505050565b610863610bb7565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661090d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103dd565b61091982600083610c00565b6001600160a01b0382166000908152602081905260409020548181101561098d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103dd565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a4d610c04565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108903390565b6001600160a01b038316610aa85760405162461bcd60e51b81526004016103dd90610deb565b6001600160a01b038216610ace5760405162461bcd60e51b81526004016103dd90610e30565b610ad9838383610c00565b6001600160a01b03831660009081526020819052604090205481811015610b515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dd565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107c1565b60055460ff166104415760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103dd565b6105c45b60055460ff16156104415760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103dd565b600060208083528351808285015260005b81811015610c7757858101830151858201604001528201610c5b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610caf57600080fd5b919050565b60008060408385031215610cc757600080fd5b610cd083610c98565b946020939093013593505050565b600060208284031215610cf057600080fd5b5035919050565b600080600060608486031215610d0c57600080fd5b610d1584610c98565b9250610d2360208501610c98565b9150604084013590509250925092565b600060208284031215610d4557600080fd5b610d4e82610c98565b9392505050565b60008060408385031215610d6857600080fd5b610d7183610c98565b9150610d7f60208401610c98565b90509250929050565b600181811c90821680610d9c57607f821691505b602082108103610dbc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037757610377610dc2565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b808202811582820484141761037757610377610dc2565b600082610ea757634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561037757610377610dc256fea26469706673582212202128cdb1b0c4c5c77f051c129a10690cc0b6106fe20610c1915332c73364a06c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x2232BC2A37B5B2B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x888AB PUSH1 0xEB SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x2EE JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x6F DUP3 DUP3 PUSH3 0x2EE JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x87 CALLER PUSH3 0xAA JUMP JUMPDEST PUSH3 0x9F CALLER PUSH12 0xA18F07D736B90BE550000000 PUSH3 0x104 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x6 SSTORE PUSH3 0x3E2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x160 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x16E PUSH1 0x0 DUP4 DUP4 PUSH3 0x1D9 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x182 SWAP2 SWAP1 PUSH3 0x3BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1E3 PUSH3 0x200 JUMP JUMPDEST PUSH3 0x1FB DUP4 DUP4 DUP4 PUSH3 0x1FB PUSH1 0x20 SHL PUSH3 0x5C4 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x157 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x275 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x296 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1FB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2C5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2E6 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2D1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x30A JUMPI PUSH3 0x30A PUSH3 0x24A JUMP JUMPDEST PUSH3 0x322 DUP2 PUSH3 0x31B DUP5 SLOAD PUSH3 0x260 JUMP JUMPDEST DUP5 PUSH3 0x29C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x35A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x341 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2E6 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x38B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x36A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3AA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x3DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF5 DUP1 PUSH3 0x3F2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x189D165E EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x431 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x16D JUMP JUMPDEST PUSH2 0x181 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x16D PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH2 0x16D PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH2 0x181 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E0 SWAP1 PUSH2 0xD88 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30C SWAP1 PUSH2 0xD88 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x359 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x359 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x371 DUP2 DUP6 DUP6 PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x385 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20726174652063616E6E6F74206265206D6F7265207468616E203130 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3025 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F9 DUP6 DUP3 DUP6 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x404 DUP6 DUP6 DUP6 PUSH2 0x7C7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x371 DUP2 DUP6 DUP6 PUSH2 0x422 DUP4 DUP4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x439 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x441 PUSH2 0x85B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x44D CALLER DUP3 PUSH2 0x8AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x458 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x441 PUSH1 0x0 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x46D DUP3 CALLER DUP4 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x477 DUP3 DUP3 PUSH2 0x8AD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x483 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x441 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2E0 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x4A8 DUP3 DUP7 PUSH2 0x523 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x404 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x371 DUP2 DUP6 DUP6 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x556 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x44D DUP2 PUSH2 0x9EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x759 DUP5 DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x7C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5C9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x825 SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x82F SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x83D DUP3 DUP5 PUSH2 0xEAC JUMP JUMPDEST SWAP1 POP PUSH2 0x849 DUP6 DUP4 PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x854 DUP6 DUP6 DUP4 PUSH2 0xA82 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x863 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x919 DUP3 PUSH1 0x0 DUP4 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x98D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x890 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH2 0xAD9 DUP4 DUP4 DUP4 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x5C4 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC77 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC5B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD0 DUP4 PUSH2 0xC98 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD15 DUP5 PUSH2 0xC98 JUMP JUMPDEST SWAP3 POP PUSH2 0xD23 PUSH1 0x20 DUP6 ADD PUSH2 0xC98 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4E DUP3 PUSH2 0xC98 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD71 DUP4 PUSH2 0xC98 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7F PUSH1 0x20 DUP5 ADD PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD9C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDBC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x377 JUMPI PUSH2 0x377 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x377 JUMPI PUSH2 0x377 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x377 JUMPI PUSH2 0x377 PUSH2 0xDC2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x28 0xCD 0xB1 0xB0 0xC4 0xC5 0xC7 PUSH32 0x51C129A10690CC0B6106FE20610C1915332C73364A06C64736F6C6343000811 STOP CALLER ",
							"sourceMap": "221:1625:0:-:0;;;319:144;;;;;;;;;;758:116:3;;;;;;;;;;;;;-1:-1:-1;;;758:116:3;;;;;;;;;;;;;;;;-1:-1:-1;;;758:116:3;;;833:5;825;:13;;;;;;:::i;:::-;-1:-1:-1;849:7:3;:17;859:7;849;:17;:::i;:::-;-1:-1:-1;;505:7:2;:15;;-1:-1:-1;;505:15:2;;;-1:-1:-1;385:32:1;173:10:7;385:18:1;:32::i;:::-;369::0::1;375:10;387:13;369:5;:32::i;:::-;423:1;412:8;:12:::0;221:1625;;1931:191:1;2024:6;;;-1:-1:-1;;;;;2041:17:1;;;2024:6;2041:17;;;-1:-1:-1;;;;;;2041:17:1;;;;;;2074:40;;2024:6;;;;;;;;2074:40;;2005:16;;2074:40;1994:128;1931:191;:::o;7554:548:3:-;-1:-1:-1;;;;;7638:21:3;;7630:65;;;;-1:-1:-1;;;7630:65:3;;2937:2:8;7630:65:3;;;2919:21:8;2976:2;2956:18;;;2949:30;3015:33;2995:18;;;2988:61;3066:18;;7630:65:3;;;;;;;;;7708:49;7737:1;7741:7;7750:6;7708:20;:49::i;:::-;7786:6;7770:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7941:18:3;;:9;:18;;;;;;;;;;;:28;;;;;;7996:37;3468:25:8;;;7996:37:3;;3441:18:8;7996:37:3;;;;;;;7554:548;;:::o;614:199:0:-;759:19:2;:17;:19::i;:::-;761:44:0::1;788:4;794:2;798:6;761:26;;;;;:44;;:::i;:::-;614:199:::0;;;:::o;1313:108:2:-;1225:7;;;;1383:9;1375:38;;;;-1:-1:-1;;;1375:38:2;;3706:2:8;1375:38:2;;;3688:21:8;3745:2;3725:18;;;3718:30;-1:-1:-1;;;3764:18:8;;;3757:46;3820:18;;1375:38:2;3504:340:8;1375:38:2;1313:108::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:8;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:8;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:8;;;2580:26;2531:89;-1:-1:-1;;1335:1:8;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:8;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:8;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:8;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:8:o;3095:222::-;3160:9;;;3181:10;;;3178:133;;;3233:10;3228:3;3224:20;3221:1;3214:31;3268:4;3265:1;3258:15;3296:4;3293:1;3286:15;3178:133;3095:222;;;;:::o;3504:340::-;221:1625:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_893": {
									"entryPoint": 1481,
									"id": 893,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_76": {
									"entryPoint": 3072,
									"id": 76,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_947": {
									"entryPoint": 1476,
									"id": 947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_848": {
									"entryPoint": 2221,
									"id": 848,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_208": {
									"entryPoint": 1773,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1117": {
									"entryPoint": null,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_356": {
									"entryPoint": 2629,
									"id": 356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_329": {
									"entryPoint": 3076,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_340": {
									"entryPoint": 2999,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_936": {
									"entryPoint": 1869,
									"id": 936,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_265": {
									"entryPoint": 2539,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_153": {
									"entryPoint": 1991,
									"id": 153,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_719": {
									"entryPoint": 2690,
									"id": 719,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_372": {
									"entryPoint": 2139,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_514": {
									"entryPoint": 1315,
									"id": 514,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_539": {
									"entryPoint": 867,
									"id": 539,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_471": {
									"entryPoint": null,
									"id": 471,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1080": {
									"entryPoint": 1122,
									"id": 1080,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnRate_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_1059": {
									"entryPoint": 1091,
									"id": 1059,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_642": {
									"entryPoint": 1178,
									"id": 642,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_601": {
									"entryPoint": 1039,
									"id": 601,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_427": {
									"entryPoint": 721,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_194": {
									"entryPoint": null,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_46": {
									"entryPoint": 1147,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_317": {
									"entryPoint": null,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_222": {
									"entryPoint": 1104,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBurnRate_95": {
									"entryPoint": 893,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_437": {
									"entryPoint": 1163,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_457": {
									"entryPoint": null,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_572": {
									"entryPoint": 1003,
									"id": 572,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_245": {
									"entryPoint": 1358,
									"id": 245,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_496": {
									"entryPoint": 1301,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_55": {
									"entryPoint": 1073,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2bf40ff2b9221b0830d3e8ee57338a2517d764a1b077ae7fd03bbeb45a71278__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9380:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:8",
																"statements": []
															},
															"src": "294:140:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:548:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:8"
															},
															"nodeType": "YulIf",
															"src": "664:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:8",
														"type": ""
													}
												],
												"src": "567:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:8"
															},
															"nodeType": "YulIf",
															"src": "842:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:8",
														"type": ""
													}
												],
												"src": "745:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:8",
														"type": ""
													}
												],
												"src": "1004:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:8",
														"type": ""
													}
												],
												"src": "1196:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1448:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1469:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1478:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1465:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1465:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1490:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1461:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1461:32:8"
															},
															"nodeType": "YulIf",
															"src": "1458:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1542:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1529:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1414:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1425:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1437:6:8",
														"type": ""
													}
												],
												"src": "1378:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1667:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1713:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1725:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1715:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1715:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1715:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1688:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1697:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1684:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1684:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:32:8"
															},
															"nodeType": "YulIf",
															"src": "1677:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1738:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1767:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1748:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1786:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1819:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1830:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1815:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1796:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1796:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1786:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1843:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1870:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1881:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1866:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1853:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1617:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1628:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1640:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1648:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1656:6:8",
														"type": ""
													}
												],
												"src": "1563:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1993:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2003:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2015:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2003:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2045:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2068:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2056:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2056:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2038:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2038:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1962:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1973:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1984:4:8",
														"type": ""
													}
												],
												"src": "1896:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:8"
															},
															"nodeType": "YulIf",
															"src": "2165:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:8",
														"type": ""
													}
												],
												"src": "2085:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2387:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2357:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2368:4:8",
														"type": ""
													}
												],
												"src": "2276:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:8"
															},
															"nodeType": "YulIf",
															"src": "2581:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2642:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2690:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:8",
														"type": ""
													}
												],
												"src": "2484:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2922:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2924:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:26:8"
															},
															"nodeType": "YulIf",
															"src": "2892:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3012:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:38:8"
															},
															"nodeType": "YulIf",
															"src": "2962:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2784:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2793:6:8",
														"type": ""
													}
												],
												"src": "2749:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3308:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3325:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3370:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3355:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3409:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:18:8"
																	},
																	{
																		"hexValue": "4275726e20726174652063616e6e6f74206265206d6f7265207468616e203130",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3414:34:8",
																		"type": "",
																		"value": "Burn rate cannot be more than 10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3387:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3469:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3480:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3465:18:8"
																	},
																	{
																		"hexValue": "3025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3485:4:8",
																		"type": "",
																		"value": "0%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3458:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3499:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3511:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3499:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2bf40ff2b9221b0830d3e8ee57338a2517d764a1b077ae7fd03bbeb45a71278__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3285:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3299:4:8",
														"type": ""
													}
												],
												"src": "3134:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3569:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3586:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3593:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3598:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3589:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3589:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3579:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3579:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3619:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3619:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3650:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3653:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3537:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3717:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3727:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3738:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3741:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3766:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3768:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3768:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3768:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3758:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3761:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3755:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:10:8"
															},
															"nodeType": "YulIf",
															"src": "3752:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3700:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3703:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3709:3:8",
														"type": ""
													}
												],
												"src": "3669:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3973:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3990:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4001:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3983:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3983:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4024:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4035:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4020:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4013:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4013:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4013:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4063:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4074:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4059:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4059:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4079:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4052:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4052:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4145:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4150:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4123:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4167:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4179:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4190:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4175:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4167:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3950:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3964:4:8",
														"type": ""
													}
												],
												"src": "3799:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4379:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4396:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4389:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4389:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4430:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4441:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4446:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4419:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4419:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4469:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4480:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4485:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4458:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4540:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4551:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4536:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4536:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4556:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4529:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4529:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4574:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4586:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4597:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4582:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4582:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4574:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4356:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4370:4:8",
														"type": ""
													}
												],
												"src": "4205:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4786:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4803:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4814:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4796:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4796:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4826:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4826:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4876:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4887:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4892:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4865:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4865:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4865:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4947:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4958:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4943:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4943:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4963:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4936:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4936:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4936:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4979:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4991:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5002:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4987:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4979:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4763:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4777:4:8",
														"type": ""
													}
												],
												"src": "4612:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5191:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5219:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5201:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5201:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5242:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5253:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5238:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5238:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5258:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5231:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5231:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5352:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5363:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5348:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5368:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5341:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5341:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5382:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5394:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5405:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5390:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5390:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5382:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5168:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5182:4:8",
														"type": ""
													}
												],
												"src": "5017:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5594:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5611:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5622:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5604:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5604:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5604:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5645:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5656:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5641:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5634:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5684:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5695:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5680:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5680:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5700:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5673:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5673:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5673:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5744:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5756:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5752:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5752:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5744:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5571:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5585:4:8",
														"type": ""
													}
												],
												"src": "5420:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5955:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5972:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5983:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5965:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5965:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5965:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6006:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6017:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6002:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6002:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6022:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5995:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5995:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6045:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6056:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6041:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6041:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6061:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6034:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6034:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6034:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6102:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6114:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6125:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6110:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6110:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6102:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5932:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5946:4:8",
														"type": ""
													}
												],
												"src": "5781:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6313:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6330:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6341:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6323:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6323:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6323:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6364:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6360:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6360:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6380:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6353:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6403:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6414:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6399:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6419:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6392:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6392:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6474:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6485:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6470:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6470:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6490:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6463:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6507:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6519:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6530:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6515:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6515:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6507:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6290:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6304:4:8",
														"type": ""
													}
												],
												"src": "6139:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6719:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6736:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6747:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6729:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6729:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6781:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6766:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6786:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6759:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6809:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6820:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6805:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6805:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6825:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6798:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6798:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6880:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6891:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6876:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6896:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6869:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6869:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6911:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6923:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6934:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6919:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6911:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6696:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6710:4:8",
														"type": ""
													}
												],
												"src": "6545:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7001:116:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7011:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7026:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7029:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7011:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7089:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7091:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7091:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7091:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7060:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7053:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7053:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7067:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7074:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7083:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7070:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7070:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7064:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7050:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7050:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7043:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:45:8"
															},
															"nodeType": "YulIf",
															"src": "7040:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6980:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6983:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6989:7:8",
														"type": ""
													}
												],
												"src": "6949:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7168:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7199:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7220:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7227:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7232:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7223:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7223:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7213:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7213:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7213:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7264:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7267:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7257:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7257:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7257:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7292:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7295:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7285:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7285:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7285:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7188:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7181:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:9:8"
															},
															"nodeType": "YulIf",
															"src": "7178:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7319:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7328:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7331:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7324:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7319:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7153:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7156:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7162:1:8",
														"type": ""
													}
												],
												"src": "7122:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7393:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7403:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7415:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7411:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7411:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7403:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7444:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7446:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7446:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7446:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7435:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7441:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7432:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7432:11:8"
															},
															"nodeType": "YulIf",
															"src": "7429:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7375:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7378:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7384:4:8",
														"type": ""
													}
												],
												"src": "7344:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7651:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7668:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7661:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7702:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7713:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7698:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7698:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7718:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7691:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7691:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7691:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7741:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7752:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7737:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7737:18:8"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7757:34:8",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7730:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7730:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7812:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7823:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7808:18:8"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7828:3:8",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7801:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7801:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7841:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7853:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7864:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7841:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7628:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7642:4:8",
														"type": ""
													}
												],
												"src": "7477:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8053:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8070:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8081:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8063:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8063:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8104:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8115:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8100:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8100:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8120:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8093:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8093:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8093:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8143:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8154:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8139:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8139:18:8"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8159:34:8",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8132:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8132:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8214:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8225:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8210:18:8"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8230:4:8",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8203:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8203:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8244:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8256:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8267:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8252:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8244:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8030:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8044:4:8",
														"type": ""
													}
												],
												"src": "7879:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8456:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8473:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8466:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8466:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8507:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8518:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8503:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8523:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8496:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8496:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8546:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8557:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8542:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8542:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8562:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8535:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8535:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8535:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8617:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8628:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8613:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8613:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8633:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8606:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8606:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8606:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8651:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8663:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8674:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8659:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8659:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8651:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8433:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8447:4:8",
														"type": ""
													}
												],
												"src": "8282:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8863:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8880:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8891:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8873:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8873:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8873:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8914:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8925:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8910:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8910:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8930:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8903:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8903:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8903:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8953:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8964:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8949:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8949:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8969:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8942:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8942:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8942:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9001:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9013:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9024:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9009:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9009:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9001:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8840:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8854:4:8",
														"type": ""
													}
												],
												"src": "8689:344:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9212:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9240:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9222:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9222:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9263:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9274:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9259:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9259:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9279:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9252:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9252:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9252:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9302:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9313:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9298:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9298:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9318:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9291:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9291:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9291:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9346:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9358:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9369:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9346:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9189:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9203:4:8",
														"type": ""
													}
												],
												"src": "9038:340:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f2bf40ff2b9221b0830d3e8ee57338a2517d764a1b077ae7fd03bbeb45a71278__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Burn rate cannot be more than 10\")\n        mstore(add(headStart, 96), \"0%\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610274578063a457c2d71461027c578063a9059cbb1461028f578063bed99850146102a2578063dd62ed3e146102ab578063f2fde38b146102be57600080fd5b806370a08231146101ff578063715018a61461022857806379cc6790146102305780638456cb59146102435780638da5cb5b1461024b57600080fd5b8063313ce567116100ff578063313ce567146101b757806339509351146101c65780633f4ba83a146101d957806342966c68146101e15780635c975abb146101f457600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d578063189d165e1461018f57806323b872dd146101a4575b600080fd5b6101446102d1565b6040516101519190610c4a565b60405180910390f35b61016d610168366004610cb4565b610363565b6040519015158152602001610151565b6002545b604051908152602001610151565b6101a261019d366004610cde565b61037d565b005b61016d6101b2366004610cf7565b6103eb565b60405160128152602001610151565b61016d6101d4366004610cb4565b61040f565b6101a2610431565b6101a26101ef366004610cde565b610443565b60055460ff1661016d565b61018161020d366004610d33565b6001600160a01b031660009081526020819052604090205490565b6101a2610450565b6101a261023e366004610cb4565b610462565b6101a261047b565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610151565b61014461048b565b61016d61028a366004610cb4565b61049a565b61016d61029d366004610cb4565b610515565b61018160065481565b6101816102b9366004610d55565b610523565b6101a26102cc366004610d33565b61054e565b6060600380546102e090610d88565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90610d88565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b5050505050905090565b6000336103718185856105c9565b60019150505b92915050565b6103856106ed565b60648111156103e65760405162461bcd60e51b815260206004820152602260248201527f4275726e20726174652063616e6e6f74206265206d6f7265207468616e203130604482015261302560f01b60648201526084015b60405180910390fd5b600655565b6000336103f985828561074d565b6104048585856107c7565b506001949350505050565b6000336103718185856104228383610523565b61042c9190610dd8565b6105c9565b6104396106ed565b61044161085b565b565b61044d33826108ad565b50565b6104586106ed565b61044160006109eb565b61046d82338361074d565b61047782826108ad565b5050565b6104836106ed565b610441610a45565b6060600480546102e090610d88565b600033816104a88286610523565b9050838110156105085760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103dd565b61040482868684036105c9565b6000336103718185856107c7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105566106ed565b6001600160a01b0381166105bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b61044d816109eb565b505050565b6001600160a01b03831661062b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dd565b6001600160a01b03821661068c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b036101009091041633146104415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103dd565b60006107598484610523565b905060001981146107c157818110156107b45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103dd565b6107c184848484036105c9565b50505050565b6001600160a01b0383166107ed5760405162461bcd60e51b81526004016103dd90610deb565b6001600160a01b0382166108135760405162461bcd60e51b81526004016103dd90610e30565b60006064600654836108259190610e73565b61082f9190610e8a565b9050600061083d8284610eac565b905061084985836108ad565b610854858583610a82565b5050505050565b610863610bb7565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661090d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103dd565b61091982600083610c00565b6001600160a01b0382166000908152602081905260409020548181101561098d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103dd565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a4d610c04565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108903390565b6001600160a01b038316610aa85760405162461bcd60e51b81526004016103dd90610deb565b6001600160a01b038216610ace5760405162461bcd60e51b81526004016103dd90610e30565b610ad9838383610c00565b6001600160a01b03831660009081526020819052604090205481811015610b515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dd565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107c1565b60055460ff166104415760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103dd565b6105c45b60055460ff16156104415760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103dd565b600060208083528351808285015260005b81811015610c7757858101830151858201604001528201610c5b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610caf57600080fd5b919050565b60008060408385031215610cc757600080fd5b610cd083610c98565b946020939093013593505050565b600060208284031215610cf057600080fd5b5035919050565b600080600060608486031215610d0c57600080fd5b610d1584610c98565b9250610d2360208501610c98565b9150604084013590509250925092565b600060208284031215610d4557600080fd5b610d4e82610c98565b9392505050565b60008060408385031215610d6857600080fd5b610d7183610c98565b9150610d7f60208401610c98565b90509250929050565b600181811c90821680610d9c57607f821691505b602082108103610dbc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037757610377610dc2565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b808202811582820484141761037757610377610dc2565b600082610ea757634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561037757610377610dc256fea26469706673582212202128cdb1b0c4c5c77f051c129a10690cc0b6106fe20610c1915332c73364a06c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x189D165E EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x431 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x16D JUMP JUMPDEST PUSH2 0x181 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x16D PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH2 0x16D PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH2 0x181 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E0 SWAP1 PUSH2 0xD88 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30C SWAP1 PUSH2 0xD88 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x359 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x359 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x371 DUP2 DUP6 DUP6 PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x385 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20726174652063616E6E6F74206265206D6F7265207468616E203130 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3025 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F9 DUP6 DUP3 DUP6 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x404 DUP6 DUP6 DUP6 PUSH2 0x7C7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x371 DUP2 DUP6 DUP6 PUSH2 0x422 DUP4 DUP4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x439 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x441 PUSH2 0x85B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x44D CALLER DUP3 PUSH2 0x8AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x458 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x441 PUSH1 0x0 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x46D DUP3 CALLER DUP4 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x477 DUP3 DUP3 PUSH2 0x8AD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x483 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x441 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2E0 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x4A8 DUP3 DUP7 PUSH2 0x523 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x404 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x371 DUP2 DUP6 DUP6 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x556 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x44D DUP2 PUSH2 0x9EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x759 DUP5 DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x7C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5C9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x825 SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x82F SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x83D DUP3 DUP5 PUSH2 0xEAC JUMP JUMPDEST SWAP1 POP PUSH2 0x849 DUP6 DUP4 PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x854 DUP6 DUP6 DUP4 PUSH2 0xA82 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x863 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x919 DUP3 PUSH1 0x0 DUP4 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x98D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x890 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH2 0xAD9 DUP4 DUP4 DUP4 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x5C4 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC77 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC5B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD0 DUP4 PUSH2 0xC98 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD15 DUP5 PUSH2 0xC98 JUMP JUMPDEST SWAP3 POP PUSH2 0xD23 PUSH1 0x20 DUP6 ADD PUSH2 0xC98 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4E DUP3 PUSH2 0xC98 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD71 DUP4 PUSH2 0xC98 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7F PUSH1 0x20 DUP5 ADD PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD9C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDBC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x377 JUMPI PUSH2 0x377 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x377 JUMPI PUSH2 0x377 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x377 JUMPI PUSH2 0x377 PUSH2 0xDC2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x28 0xCD 0xB1 0xB0 0xC4 0xC5 0xC7 PUSH32 0x51C129A10690CC0B6106FE20610C1915332C73364A06C64736F6C6343000811 STOP CALLER ",
							"sourceMap": "221:1625:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:100:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3295:201;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;3295:201:3;1004:187:8;2064:108:3;2152:12;;2064:108;;;1342:25:8;;;1330:2;1315:18;2064:108:3;1196:177:8;862:176:0;;;;;;:::i;:::-;;:::i;:::-;;4076:295:3;;;;;;:::i;:::-;;:::i;1906:93::-;;;1989:2;2038:36:8;;2026:2;2011:18;1906:93:3;1896:184:8;4780:238:3;;;;;;:::i;:::-;;:::i;540:65:0:-;;;:::i;501:91:5:-;;;;;;:::i;:::-;;:::i;1154:86:2:-;1225:7;;;;1154:86;;2235:127:3;;;;;;:::i;:::-;-1:-1:-1;;;;;2336:18:3;2309:7;2336:18;;;;;;;;;;;;2235:127;1312:103:1;;;:::i;911:164:5:-;;;;;;:::i;:::-;;:::i;471:61:0:-;;;:::i;664:87:1:-;737:6;;;;;-1:-1:-1;;;;;737:6:1;664:87;;-1:-1:-1;;;;;2440:32:8;;;2422:51;;2410:2;2395:18;664:87:1;2276:203:8;1163:104:3;;;:::i;5521:436::-;;;;;;:::i;:::-;;:::i;2568:193::-;;;;;;:::i;:::-;;:::i;289:23:0:-;;;;;;2824:151:3;;;;;;:::i;:::-;;:::i;1570:201:1:-;;;;;;:::i;:::-;;:::i;944:100:3:-;998:13;1031:5;1024:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:100;:::o;3295:201::-;3378:4;173:10:7;3434:32:3;173:10:7;3450:7:3;3459:6;3434:8;:32::i;:::-;3484:4;3477:11;;;3295:201;;;;;:::o;862:176:0:-;550:13:1;:11;:13::i;:::-;955:3:0::1;940:11;:18;;932:65;;;::::0;-1:-1:-1;;;932:65:0;;3336:2:8;932:65:0::1;::::0;::::1;3318:21:8::0;3375:2;3355:18;;;3348:30;3414:34;3394:18;;;3387:62;-1:-1:-1;;;3465:18:8;;;3458:32;3507:19;;932:65:0::1;;;;;;;;;1008:8;:22:::0;862:176::o;4076:295:3:-;4207:4;173:10:7;4265:38:3;4281:4;173:10:7;4296:6:3;4265:15;:38::i;:::-;4314:27;4324:4;4330:2;4334:6;4314:9;:27::i;:::-;-1:-1:-1;4359:4:3;;4076:295;-1:-1:-1;;;;4076:295:3:o;4780:238::-;4868:4;173:10:7;4924:64:3;173:10:7;4940:7:3;4977:10;4949:25;173:10:7;4940:7:3;4949:9;:25::i;:::-;:38;;;;:::i;:::-;4924:8;:64::i;540:65:0:-;550:13:1;:11;:13::i;:::-;587:10:0::1;:8;:10::i;:::-;540:65::o:0;501:91:5:-;557:27;173:10:7;577:6:5;557:5;:27::i;:::-;501:91;:::o;1312:103:1:-;550:13;:11;:13::i;:::-;1377:30:::1;1404:1;1377:18;:30::i;911:164:5:-:0;988:46;1004:7;173:10:7;1027:6:5;988:15;:46::i;:::-;1045:22;1051:7;1060:6;1045:5;:22::i;:::-;911:164;;:::o;471:61:0:-;550:13:1;:11;:13::i;:::-;516:8:0::1;:6;:8::i;1163:104:3:-:0;1219:13;1252:7;1245:14;;;;;:::i;5521:436::-;5614:4;173:10:7;5614:4:3;5697:25;173:10:7;5714:7:3;5697:9;:25::i;:::-;5670:52;;5761:15;5741:16;:35;;5733:85;;;;-1:-1:-1;;;5733:85:3;;4001:2:8;5733:85:3;;;3983:21:8;4040:2;4020:18;;;4013:30;4079:34;4059:18;;;4052:62;-1:-1:-1;;;4130:18:8;;;4123:35;4175:19;;5733:85:3;3799:401:8;5733:85:3;5854:60;5863:5;5870:7;5898:15;5879:16;:34;5854:8;:60::i;2568:193::-;2647:4;173:10:7;2703:28:3;173:10:7;2720:2:3;2724:6;2703:9;:28::i;2824:151::-;-1:-1:-1;;;;;2940:18:3;;;2913:7;2940:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2824:151::o;1570:201:1:-;550:13;:11;:13::i;:::-;-1:-1:-1;;;;;1659:22:1;::::1;1651:73;;;::::0;-1:-1:-1;;;1651:73:1;;4407:2:8;1651:73:1::1;::::0;::::1;4389:21:8::0;4446:2;4426:18;;;4419:30;4485:34;4465:18;;;4458:62;-1:-1:-1;;;4536:18:8;;;4529:36;4582:19;;1651:73:1::1;4205:402:8::0;1651:73:1::1;1735:28;1754:8;1735:18;:28::i;11272:125:3:-:0;;;;:::o;9548:380::-;-1:-1:-1;;;;;9684:19:3;;9676:68;;;;-1:-1:-1;;;9676:68:3;;4814:2:8;9676:68:3;;;4796:21:8;4853:2;4833:18;;;4826:30;4892:34;4872:18;;;4865:62;-1:-1:-1;;;4943:18:8;;;4936:34;4987:19;;9676:68:3;4612:400:8;9676:68:3;-1:-1:-1;;;;;9763:21:3;;9755:68;;;;-1:-1:-1;;;9755:68:3;;5219:2:8;9755:68:3;;;5201:21:8;5258:2;5238:18;;;5231:30;5297:34;5277:18;;;5270:62;-1:-1:-1;;;5348:18:8;;;5341:32;5390:19;;9755:68:3;5017:398:8;9755:68:3;-1:-1:-1;;;;;9836:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9888:32;;1342:25:8;;;9888:32:3;;1315:18:8;9888:32:3;;;;;;;9548:380;;;:::o;829:132:1:-;737:6;;-1:-1:-1;;;;;737:6:1;;;;;173:10:7;893:23:1;885:68;;;;-1:-1:-1;;;885:68:1;;5622:2:8;885:68:1;;;5604:21:8;;;5641:18;;;5634:30;5700:34;5680:18;;;5673:62;5752:18;;885:68:1;5420:356:8;10219:453:3;10354:24;10381:25;10391:5;10398:7;10381:9;:25::i;:::-;10354:52;;-1:-1:-1;;10421:16:3;:37;10417:248;;10503:6;10483:16;:26;;10475:68;;;;-1:-1:-1;;;10475:68:3;;5983:2:8;10475:68:3;;;5965:21:8;6022:2;6002:18;;;5995:30;6061:31;6041:18;;;6034:59;6110:18;;10475:68:3;5781:353:8;10475:68:3;10587:51;10596:5;10603:7;10631:6;10612:16;:25;10587:8;:51::i;:::-;10343:329;10219:453;;;:::o;1139:704:0:-;-1:-1:-1;;;;;1254:20:0;;1246:70;;;;-1:-1:-1;;;1246:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1335:23:0;;1327:71;;;;-1:-1:-1;;;1327:71:0;;;;;;;:::i;:::-;1480:18;1521:3;1510:8;;1501:6;:17;;;;:::i;:::-;:23;;;;:::i;:::-;1480:44;-1:-1:-1;1602:18:0;1623:19;1480:44;1623:6;:19;:::i;:::-;1602:40;;1699:25;1705:6;1713:10;1699:5;:25::i;:::-;1789:46;1805:6;1813:9;1824:10;1789:15;:46::i;:::-;1235:608;;1139:704;;;:::o;2009:120:2:-;1018:16;:14;:16::i;:::-;2068:7:::1;:15:::0;;-1:-1:-1;;2068:15:2::1;::::0;;2099:22:::1;173:10:7::0;2108:12:2::1;2099:22;::::0;-1:-1:-1;;;;;2440:32:8;;;2422:51;;2410:2;2395:18;2099:22:2::1;;;;;;;2009:120::o:0;8435:675:3:-;-1:-1:-1;;;;;8519:21:3;;8511:67;;;;-1:-1:-1;;;8511:67:3;;7679:2:8;8511:67:3;;;7661:21:8;7718:2;7698:18;;;7691:30;7757:34;7737:18;;;7730:62;-1:-1:-1;;;7808:18:8;;;7801:31;7849:19;;8511:67:3;7477:397:8;8511:67:3;8591:49;8612:7;8629:1;8633:6;8591:20;:49::i;:::-;-1:-1:-1;;;;;8678:18:3;;8653:22;8678:18;;;;;;;;;;;8715:24;;;;8707:71;;;;-1:-1:-1;;;8707:71:3;;8081:2:8;8707:71:3;;;8063:21:8;8120:2;8100:18;;;8093:30;8159:34;8139:18;;;8132:62;-1:-1:-1;;;8210:18:8;;;8203:32;8252:19;;8707:71:3;7879:398:8;8707:71:3;-1:-1:-1;;;;;8814:18:3;;:9;:18;;;;;;;;;;;8835:23;;;8814:44;;8953:12;:22;;;;;;;9004:37;1342:25:8;;;8814:9:3;;:18;9004:37;;1315:18:8;9004:37:3;;;;;;;11272:125;;;:::o;1931:191:1:-;2024:6;;;-1:-1:-1;;;;;2041:17:1;;;2024:6;2041:17;;;-1:-1:-1;;;;;;2041:17:1;;;;;;2074:40;;2024:6;;;;;;;;2074:40;;2005:16;;2074:40;1994:128;1931:191;:::o;1750:118:2:-;759:19;:17;:19::i;:::-;1810:7:::1;:14:::0;;-1:-1:-1;;1810:14:2::1;1820:4;1810:14;::::0;;1840:20:::1;1847:12;173:10:7::0;;93:98;6427:840:3;-1:-1:-1;;;;;6558:18:3;;6550:68;;;;-1:-1:-1;;;6550:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;6637:16:3;;6629:64;;;;-1:-1:-1;;;6629:64:3;;;;;;;:::i;:::-;6706:38;6727:4;6733:2;6737:6;6706:20;:38::i;:::-;-1:-1:-1;;;;;6779:15:3;;6757:19;6779:15;;;;;;;;;;;6813:21;;;;6805:72;;;;-1:-1:-1;;;6805:72:3;;8484:2:8;6805:72:3;;;8466:21:8;8523:2;8503:18;;;8496:30;8562:34;8542:18;;;8535:62;-1:-1:-1;;;8613:18:8;;;8606:36;8659:19;;6805:72:3;8282:402:8;6805:72:3;-1:-1:-1;;;;;6913:15:3;;;:9;:15;;;;;;;;;;;6931:20;;;6913:38;;7131:13;;;;;;;;;;:23;;;;;;7183:26;;1342:25:8;;;7131:13:3;;7183:26;;1315:18:8;7183:26:3;;;;;;;7222:37;11272:125;1498:108:2;1225:7;;;;1557:41;;;;-1:-1:-1;;;1557:41:2;;8891:2:8;1557:41:2;;;8873:21:8;8930:2;8910:18;;;8903:30;-1:-1:-1;;;8949:18:8;;;8942:50;9009:18;;1557:41:2;8689:344:8;614:199:0;759:19:2;1313:108;1225:7;;;;1383:9;1375:38;;;;-1:-1:-1;;;1375:38:2;;9240:2:8;1375:38:2;;;9222:21:8;9279:2;9259:18;;;9252:30;-1:-1:-1;;;9298:18:8;;;9291:46;9354:18;;1375:38:2;9038:340:8;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1378:180::-;1437:6;1490:2;1478:9;1469:7;1465:23;1461:32;1458:52;;;1506:1;1503;1496:12;1458:52;-1:-1:-1;1529:23:8;;1378:180;-1:-1:-1;1378:180:8:o;1563:328::-;1640:6;1648;1656;1709:2;1697:9;1688:7;1684:23;1680:32;1677:52;;;1725:1;1722;1715:12;1677:52;1748:29;1767:9;1748:29;:::i;:::-;1738:39;;1796:38;1830:2;1819:9;1815:18;1796:38;:::i;:::-;1786:48;;1881:2;1870:9;1866:18;1853:32;1843:42;;1563:328;;;;;:::o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:8:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3537:127::-;3598:10;3593:3;3589:20;3586:1;3579:31;3629:4;3626:1;3619:15;3653:4;3650:1;3643:15;3669:125;3734:9;;;3755:10;;;3752:36;;;3768:18;;:::i;6139:401::-;6341:2;6323:21;;;6380:2;6360:18;;;6353:30;6419:34;6414:2;6399:18;;6392:62;-1:-1:-1;;;6485:2:8;6470:18;;6463:35;6530:3;6515:19;;6139:401::o;6545:399::-;6747:2;6729:21;;;6786:2;6766:18;;;6759:30;6825:34;6820:2;6805:18;;6798:62;-1:-1:-1;;;6891:2:8;6876:18;;6869:33;6934:3;6919:19;;6545:399::o;6949:168::-;7022:9;;;7053;;7070:15;;;7064:22;;7050:37;7040:71;;7091:18;;:::i;7122:217::-;7162:1;7188;7178:132;;7232:10;7227:3;7223:20;7220:1;7213:31;7267:4;7264:1;7257:15;7295:4;7292:1;7285:15;7178:132;-1:-1:-1;7324:9:8;;7122:217::o;7344:128::-;7411:9;;;7432:11;;;7429:37;;;7446:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "765800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24651",
								"balanceOf(address)": "2563",
								"burn(uint256)": "53015",
								"burnFrom(address,uint256)": "79703",
								"burnRate()": "2383",
								"decimals()": "200",
								"decreaseAllowance(address,uint256)": "26994",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2441",
								"pause()": "infinite",
								"paused()": "2415",
								"renounceOwnership()": "infinite",
								"setBurnRate(uint256)": "24618",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28501",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 1846,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 319,
									"end": 463,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 319,
									"end": 463,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 319,
									"end": 463,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 319,
									"end": 463,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 463,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 319,
									"end": 463,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 463,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 319,
									"end": 463,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 319,
									"end": 463,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 463,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 319,
									"end": 463,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2232BC2A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "888AB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 833,
									"end": 838,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 825,
									"end": 830,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 825,
									"end": 838,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 825,
									"end": 838,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 825,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 825,
									"end": 838,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 825,
									"end": 838,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 825,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 825,
									"end": 838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 825,
									"end": 838,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 825,
									"end": 838,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 849,
									"end": 856,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 849,
									"end": 866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 859,
									"end": 866,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 849,
									"end": 856,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 849,
									"end": 866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 849,
									"end": 866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 849,
									"end": 866,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 849,
									"end": 866,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 505,
									"end": 512,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 505,
									"end": 520,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 505,
									"end": 520,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 505,
									"end": 520,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 505,
									"end": 520,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 505,
									"end": 520,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 385,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 173,
									"end": 183,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 385,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 385,
									"end": 417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 385,
									"end": 417,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 385,
									"end": 417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 369,
									"end": 401,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 375,
									"end": 385,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 387,
									"end": 400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A18F07D736B90BE550000000"
								},
								{
									"begin": 369,
									"end": 374,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 369,
									"end": 401,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 369,
									"end": 401,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 369,
									"end": 401,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 423,
									"end": 424,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 412,
									"end": 420,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 412,
									"end": 424,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1931,
									"end": 2122,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1931,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2058,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2114,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2074,
									"end": 2114,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2114,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2074,
									"end": 2114,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2021,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2005,
									"end": 2021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2114,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2122,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1931,
									"end": 2122,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1931,
									"end": 2122,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7554,
									"end": 8102,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7554,
									"end": 8102,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7638,
									"end": 7659,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7638,
									"end": 7659,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2937,
									"end": 2939,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2919,
									"end": 2940,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2976,
									"end": 2978,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2956,
									"end": 2974,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2956,
									"end": 2974,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 2974,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2979,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3015,
									"end": 3048,
									"name": "PUSH",
									"source": 8,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 2995,
									"end": 3013,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2995,
									"end": 3013,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3013,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2988,
									"end": 3049,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3066,
									"end": 3084,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3066,
									"end": 3084,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7630,
									"end": 7695,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7708,
									"end": 7757,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7737,
									"end": 7738,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7741,
									"end": 7748,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7750,
									"end": 7756,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7708,
									"end": 7757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7708,
									"end": 7757,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7708,
									"end": 7757,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7786,
									"end": 7792,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7782,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7770,
									"end": 7782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7770,
									"end": 7792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7770,
									"end": 7792,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7950,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7959,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7969,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7969,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7969,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7969,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7941,
									"end": 7969,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3468,
									"end": 3493,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3468,
									"end": 3493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3468,
									"end": 3493,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3441,
									"end": 3459,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8033,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 7554,
									"end": 8102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7554,
									"end": 8102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7554,
									"end": 8102,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 614,
									"end": 813,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 614,
									"end": 813,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 759,
									"end": 778,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 759,
									"end": 776,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 759,
									"end": 778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 759,
									"end": 778,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 759,
									"end": 778,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 761,
									"end": 805,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 788,
									"end": 792,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 794,
									"end": 796,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 798,
									"end": 804,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 761,
									"end": 787,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 761,
									"end": 787,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 761,
									"end": 787,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 761,
									"end": 787,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551720"
								},
								{
									"begin": 761,
									"end": 787,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 761,
									"end": 805,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 761,
									"end": 805,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 761,
									"end": 805,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 761,
									"end": 805,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 761,
									"end": 805,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 614,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 813,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1313,
									"end": 1421,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1313,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1232,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1225,
									"end": 1232,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1232,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1225,
									"end": 1232,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1383,
									"end": 1392,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3706,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3688,
									"end": 3709,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3747,
									"name": "PUSH",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 3725,
									"end": 3743,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3725,
									"end": 3743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3725,
									"end": 3743,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3718,
									"end": 3748,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14185D5CD8589B194E881C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3764,
									"end": 3782,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3764,
									"end": 3782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3764,
									"end": 3782,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3757,
									"end": 3803,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3820,
									"end": 3838,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3820,
									"end": 3838,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3504,
									"end": 3844,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1375,
									"end": 1413,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1313,
									"end": 1421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3317,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 3095,
									"end": 3317,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3160,
									"end": 3169,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3160,
									"end": 3169,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3160,
									"end": 3169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3181,
									"end": 3191,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3181,
									"end": 3191,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3181,
									"end": 3191,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3311,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3311,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3178,
									"end": 3311,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3233,
									"end": 3243,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 3228,
									"end": 3231,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 3224,
									"end": 3244,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3221,
									"end": 3222,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3214,
									"end": 3245,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3268,
									"end": 3272,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 3265,
									"end": 3266,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3258,
									"end": 3273,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3300,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3293,
									"end": 3294,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3286,
									"end": 3301,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3311,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3178,
									"end": 3311,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3317,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3317,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3317,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3317,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3504,
									"end": 3844,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3504,
									"end": 3844,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 1846,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202128cdb1b0c4c5c77f051c129a10690cc0b6106fe20610c1915332c73364a06c64736f6c63430008110033",
									".code": [
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "BED99850"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "189D165E"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 1846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 944,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 944,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3295,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3295,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2152,
											"end": 2164,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 862,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 862,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4076,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4076,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2038,
											"end": 2074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1896,
											"end": 2080,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4780,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4780,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 540,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 540,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 540,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 540,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 501,
											"end": 592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 592,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 501,
											"end": 592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1240,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1154,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1154,
											"end": 1240,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1415,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1312,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1312,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1312,
											"end": 1415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 911,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 911,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 471,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 471,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 471,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 471,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 751,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 664,
											"end": 751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 737,
											"end": 743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 737,
											"end": 743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 664,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 751,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 664,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1163,
											"end": 1267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5521,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5521,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2568,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2568,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 289,
											"end": 312,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 289,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 289,
											"end": 312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 289,
											"end": 312,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2824,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2824,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1570,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1570,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1031,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1024,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1024,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3434,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3466,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3434,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3488,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3477,
											"end": 3488,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 550,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 550,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 563,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 550,
											"end": 563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 955,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 951,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 940,
											"end": 958,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 940,
											"end": 958,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 932,
											"end": 997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 932,
											"end": 997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3448,
											"name": "PUSH",
											"source": 8,
											"value": "4275726E20726174652063616E6E6F74206265206D6F7265207468616E203130"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3526,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3507,
											"end": 3526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 932,
											"end": 997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 862,
											"end": 1038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4281,
											"end": 4285,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4265,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4332,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4340,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4314,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 4987,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4949,
											"end": 4974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4974,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4949,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4949,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4924,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4924,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 540,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 540,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 550,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 550,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 563,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 550,
											"end": 563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 587,
											"end": 595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 587,
											"end": 597,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 587,
											"end": 597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 557,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 577,
											"end": 583,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 557,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 557,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1415,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1312,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 550,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 550,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 563,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 550,
											"end": 563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1404,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1377,
											"end": 1407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 988,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 988,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1051,
											"end": 1058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1045,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1067,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1045,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 911,
											"end": 1075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 911,
											"end": 1075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 471,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 471,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 550,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 550,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 563,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 550,
											"end": 563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 516,
											"end": 524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 516,
											"end": 522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 516,
											"end": 524,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1245,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5721,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5697,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5722,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5697,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5761,
											"end": 5776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5757,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5776,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5776,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4001,
											"end": 4003,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4113,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4052,
											"end": 4114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3799,
											"end": 4200,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5863,
											"end": 5868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 5877,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 5913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5854,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2730,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2703,
											"end": 2731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2951,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1570,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 550,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 550,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 563,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 550,
											"end": 563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 1681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1681,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1651,
											"end": 1724,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 1724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4410,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4448,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4419,
											"end": 4449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4519,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4465,
											"end": 4483,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4465,
											"end": 4483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4529,
											"end": 4565,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4601,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4582,
											"end": 4601,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4205,
											"end": 4607,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1651,
											"end": 1724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1754,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1735,
											"end": 1763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9684,
											"end": 9703,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9684,
											"end": 9703,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4816,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4796,
											"end": 4817,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4926,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4936,
											"end": 4970,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5006,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4987,
											"end": 5006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4612,
											"end": 5012,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9763,
											"end": 9784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9763,
											"end": 9784,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5219,
											"end": 5221,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5222,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5260,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5238,
											"end": 5256,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5238,
											"end": 5256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5238,
											"end": 5256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5297,
											"end": 5331,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5270,
											"end": 5332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5409,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5390,
											"end": 5409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5017,
											"end": 5415,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9847,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9872,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9872,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 961,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 829,
											"end": 961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 737,
											"end": 743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 737,
											"end": 743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 893,
											"end": 916,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 885,
											"end": 953,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 953,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 885,
											"end": 953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 885,
											"end": 953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5622,
											"end": 5624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 885,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 885,
											"end": 953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5625,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5625,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5734,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5680,
											"end": 5698,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5680,
											"end": 5698,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5680,
											"end": 5698,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5673,
											"end": 5735,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 5770,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5752,
											"end": 5770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 885,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5420,
											"end": 5776,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10354,
											"end": 10378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10391,
											"end": 10396,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10398,
											"end": 10405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10381,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 10381,
											"end": 10406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10381,
											"end": 10406,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10381,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10354,
											"end": 10406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10354,
											"end": 10406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10458,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10417,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10417,
											"end": 10665,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10483,
											"end": 10499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10483,
											"end": 10509,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10483,
											"end": 10509,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5983,
											"end": 5985,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5965,
											"end": 5986,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6024,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 6002,
											"end": 6020,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6002,
											"end": 6020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5995,
											"end": 6025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6092,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6093,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5781,
											"end": 6134,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10587,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10596,
											"end": 10601,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10603,
											"end": 10610,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10612,
											"end": 10628,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10612,
											"end": 10637,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10587,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 10587,
											"end": 10638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10587,
											"end": 10638,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10587,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10343,
											"end": 10672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1139,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1246,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1327,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1327,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1510,
											"end": 1518,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1510,
											"end": 1518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1501,
											"end": 1518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1501,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1501,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1501,
											"end": 1524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1501,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1501,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1602,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1623,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1642,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1623,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1705,
											"end": 1711,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1713,
											"end": 1723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1699,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1789,
											"end": 1835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1835,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1789,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2129,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2009,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1018,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1034,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1018,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2068,
											"end": 2083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2083,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2083,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2108,
											"end": 2120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2121,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8435,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8435,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8519,
											"end": 8540,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8519,
											"end": 8540,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7681,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7661,
											"end": 7682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7718,
											"end": 7720,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 7698,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7698,
											"end": 7716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7698,
											"end": 7716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7691,
											"end": 7721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7757,
											"end": 7791,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 7737,
											"end": 7755,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7737,
											"end": 7755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7737,
											"end": 7755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7730,
											"end": 7792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7801,
											"end": 7832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7477,
											"end": 7874,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 8511,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8591,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8629,
											"end": 8630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8591,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 8591,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8591,
											"end": 8640,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 8591,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8653,
											"end": 8675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8715,
											"end": 8739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8715,
											"end": 8739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8715,
											"end": 8739,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8715,
											"end": 8739,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8083,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8063,
											"end": 8084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8122,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8093,
											"end": 8123,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8159,
											"end": 8193,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8203,
											"end": 8235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8252,
											"end": 8271,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8252,
											"end": 8271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7879,
											"end": 8277,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8707,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8858,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8858,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8858,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8858,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 8965,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9041,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 2122,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1931,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2114,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1750,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 759,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 778,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 759,
											"end": 778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1810,
											"end": 1824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1824,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1810,
											"end": 1824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1810,
											"end": 1824,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1824,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1847,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 173,
											"end": 183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 93,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 7267,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 6427,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6550,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6637,
											"end": 6653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6637,
											"end": 6653,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6629,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6727,
											"end": 6731,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6706,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 6706,
											"end": 6744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6757,
											"end": 6776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8484,
											"end": 8486,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8466,
											"end": 8487,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8523,
											"end": 8525,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8496,
											"end": 8526,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8562,
											"end": 8596,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8535,
											"end": 8597,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8659,
											"end": 8678,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8659,
											"end": 8678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 8282,
											"end": 8684,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6951,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1606,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1498,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8891,
											"end": 8893,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8873,
											"end": 8894,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8930,
											"end": 8932,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8903,
											"end": 8933,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8949,
											"end": 8967,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8949,
											"end": 8967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8949,
											"end": 8967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 8992,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8689,
											"end": 9033,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 614,
											"end": 813,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 614,
											"end": 813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1313,
											"end": 1421,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1313,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1392,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9242,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9222,
											"end": 9243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9281,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 9259,
											"end": 9277,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9259,
											"end": 9277,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9259,
											"end": 9277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9252,
											"end": 9282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9337,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 9038,
											"end": 9378,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1558,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1378,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1492,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1487,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1461,
											"end": 1493,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1529,
											"end": 1552,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1552,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1378,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1654,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1697,
											"end": 1706,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1695,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1712,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1727,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1748,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1777,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1833,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1796,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1885,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3537,
											"end": 3664,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3537,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3608,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3593,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3657,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3651,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3658,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3794,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3669,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3765,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3765,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3765,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3752,
											"end": 3788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3768,
											"end": 3786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6540,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6139,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6341,
											"end": 6343,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6323,
											"end": 6344,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6323,
											"end": 6344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6323,
											"end": 6344,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6380,
											"end": 6382,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6353,
											"end": 6383,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6453,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6414,
											"end": 6416,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6454,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6485,
											"end": 6487,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6463,
											"end": 6498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6530,
											"end": 6533,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6944,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 6545,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6789,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6825,
											"end": 6859,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6820,
											"end": 6822,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6798,
											"end": 6860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6891,
											"end": 6893,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6869,
											"end": 6902,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6919,
											"end": 6938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6919,
											"end": 6938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6949,
											"end": 7117,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 6949,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7031,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7062,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7070,
											"end": 7085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7070,
											"end": 7085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7070,
											"end": 7085,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7086,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7086,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7087,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7040,
											"end": 7111,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 7091,
											"end": 7109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7122,
											"end": 7339,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 7122,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7188,
											"end": 7189,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7178,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7178,
											"end": 7310,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7223,
											"end": 7243,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7244,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7267,
											"end": 7271,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7264,
											"end": 7265,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 7272,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7295,
											"end": 7299,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7292,
											"end": 7293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7300,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7178,
											"end": 7310,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7178,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7324,
											"end": 7333,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7324,
											"end": 7333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7122,
											"end": 7339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7344,
											"end": 7472,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7344,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7420,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7420,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7420,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7443,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7466,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7429,
											"end": 7466,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 7446,
											"end": 7464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/DexToken.sol",
								"contracts/access/Ownable.sol",
								"contracts/security/Pausable.sol",
								"contracts/token/ERC20/ERC20.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"burnRate()": "bed99850",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setBurnRate(uint256)": "189d165e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBurnRate\",\"type\":\"uint256\"}],\"name\":\"setBurnRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexToken.sol\":\"DexToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DexToken.sol\":{\"keccak256\":\"0x0cbc746c2869a3a0fbbb108f0f32b256e6e511d4b1462a23d17809420d95540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3af19f47faa88a44929aa53bb9dec934e58625cf40f2242de836c535c0d5f6a\",\"dweb:/ipfs/QmWG9HiB2tvQun7uzgCMA5YMgCbGiNsEvtL86Y8CBnsnie\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xf5a524a428b90ba93c8ca29deb3d77f7417fe31190592cfcde2dac0d9d0452d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87fdc8a98d83929974e9d563b0a7845fd49d5a9c258f9f727a2c858dbf7895e9\",\"dweb:/ipfs/QmXcfheK72RJA32zGtDnrrshS4GvVKSEw7trShtX1NoZWU\"]},\"contracts/security/Pausable.sol\":{\"keccak256\":\"0xe5354654c6f5345cb35e82ed2e4187486133080b224490fb47fad058cae0f349\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb523fb979f24da464ef1a920690c9c59e0afad29fc2070a0ec7aa32a3e76a25\",\"dweb:/ipfs/QmSLJpc225H9wxFgWmVqun13NXbh5mePqo5MzkNhvALahT\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1aa3e559a5a5aa024eb2ba94c2f35fa4896da626cf0571381a6570839e88b878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a2c0398b0d3316b954de954e3605e4732795720c8755370c571b9a69285e957\",\"dweb:/ipfs/QmfREAu8385dr4rr6etyi2TnUoiiJ6vKUzVJTjQaoVbVJ6\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa59f4ccfacfe68f8d0ef03fd70f28374485cb601c7651cbeee937db4f92d836d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf51dc64aa55b1aac75794d6d70d2a0b96f72836b1ab408bbbd6b6af42fee2c\",\"dweb:/ipfs/QmNQwa4ZQCZTbRa8muRPRfzicf7Cmj9Hv9xbivWNC6BLDt\"]},\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x320fbdd0fdea5db06d808b5702d64a896cd0eaa7808b689e01132b043b721224\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c261975d34c1326f2daaa39c2ed349c5edffd359573eb478aa66239fd877125\",\"dweb:/ipfs/QmWhV4RdbXFEG1WfS7upjgNc9Q9U22sjbCoi52YQDQ4gne\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xf227fb57dfa763a3606203354ce689c8ad36589c99ecf7164725bb3bea08f51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ba9ac13ad7f679c284dee8310f2998ff131052d0a9ad18ff6853ccdf523e5d9\",\"dweb:/ipfs/QmaxJVNjaVjfRFeKzLUjnr1cWbNx9MUTNBgZtoSEvdELre\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xdd49d4261e071906d19ca00c47714446e0418d91f656a031b90f43770c0fcc9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4565d7b2f227e6b4e6e3a402941971b49bf4abe241ce06e6f3660cd070b3ba98\",\"dweb:/ipfs/QmSPa2XJXCmiwFMrKRE2StCWiQJb8sowvBW5VbCVMLHCFH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 388,
								"contract": "contracts/DexToken.sol:DexToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 394,
								"contract": "contracts/DexToken.sol:DexToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 396,
								"contract": "contracts/DexToken.sol:DexToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 398,
								"contract": "contracts/DexToken.sol:DexToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 400,
								"contract": "contracts/DexToken.sol:DexToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 283,
								"contract": "contracts/DexToken.sol:DexToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 161,
								"contract": "contracts/DexToken.sol:DexToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "contracts/DexToken.sol:DexToken",
								"label": "burnRate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xf5a524a428b90ba93c8ca29deb3d77f7417fe31190592cfcde2dac0d9d0452d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87fdc8a98d83929974e9d563b0a7845fd49d5a9c258f9f727a2c858dbf7895e9\",\"dweb:/ipfs/QmXcfheK72RJA32zGtDnrrshS4GvVKSEw7trShtX1NoZWU\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xdd49d4261e071906d19ca00c47714446e0418d91f656a031b90f43770c0fcc9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4565d7b2f227e6b4e6e3a402941971b49bf4abe241ce06e6f3660cd070b3ba98\",\"dweb:/ipfs/QmSPa2XJXCmiwFMrKRE2StCWiQJb8sowvBW5VbCVMLHCFH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 161,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/security/Pausable.sol\":{\"keccak256\":\"0xe5354654c6f5345cb35e82ed2e4187486133080b224490fb47fad058cae0f349\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb523fb979f24da464ef1a920690c9c59e0afad29fc2070a0ec7aa32a3e76a25\",\"dweb:/ipfs/QmSLJpc225H9wxFgWmVqun13NXbh5mePqo5MzkNhvALahT\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xdd49d4261e071906d19ca00c47714446e0418d91f656a031b90f43770c0fcc9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4565d7b2f227e6b4e6e3a402941971b49bf4abe241ce06e6f3660cd070b3ba98\",\"dweb:/ipfs/QmSPa2XJXCmiwFMrKRE2StCWiQJb8sowvBW5VbCVMLHCFH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 283,
								"contract": "contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/ERC20/ERC20.sol\":164:12128  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/ERC20/ERC20.sol\":758:874  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token/ERC20/ERC20.sol\":825:830  _name */\n  0x03\n    /* \"contracts/token/ERC20/ERC20.sol\":825:838  _name = name_ */\n  tag_6\n    /* \"contracts/token/ERC20/ERC20.sol\":833:838  name_ */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":825:830  _name */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":825:838  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":849:856  _symbol */\n  0x04\n    /* \"contracts/token/ERC20/ERC20.sol\":849:866  _symbol = symbol_ */\n  tag_8\n    /* \"contracts/token/ERC20/ERC20.sol\":859:866  symbol_ */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":849:856  _symbol */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":849:866  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":758:874  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":164:12128  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"contracts/token/ERC20/ERC20.sol\":164:12128  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/ERC20/ERC20.sol\":164:12128  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":944:1044  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":3295:3496  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":3295:3496  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":2064:2172  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/token/ERC20/ERC20.sol\":2152:2164  _totalSupply */\n      sload(0x02)\n        /* \"contracts/token/ERC20/ERC20.sol\":2064:2172  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":2064:2172  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":4076:4371  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":1906:1999  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/token/ERC20/ERC20.sol\":1989:1991  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":1906:1999  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":4780:5018  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2235:2362  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":2336:2354  _balances[account] */\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":2309:2316  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2336:2354  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":2235:2362  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":1163:1267  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":5521:5957  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2568:2761  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2824:2975  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":944:1044  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/token/ERC20/ERC20.sol\":998:1011  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1031:1036  _name */\n      0x03\n        /* \"contracts/token/ERC20/ERC20.sol\":1024:1036  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":944:1044  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3295:3496  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"contracts/token/ERC20/ERC20.sol\":3378:3382  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":3434:3466  _approve(owner, spender, amount) */\n      tag_73\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":3450:3457  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3459:3465  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3434:3442  _approve */\n      tag_74\n        /* \"contracts/token/ERC20/ERC20.sol\":3434:3466  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/token/ERC20/ERC20.sol\":3484:3488  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":3477:3488  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3295:3496  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4076:4371  function transferFrom(... */\n    tag_32:\n        /* \"contracts/token/ERC20/ERC20.sol\":4207:4211  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":4265:4303  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"contracts/token/ERC20/ERC20.sol\":4281:4285  from */\n      dup6\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":4296:4302  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4265:4280  _spendAllowance */\n      tag_79\n        /* \"contracts/token/ERC20/ERC20.sol\":4265:4303  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/token/ERC20/ERC20.sol\":4314:4341  _transfer(from, to, amount) */\n      tag_80\n        /* \"contracts/token/ERC20/ERC20.sol\":4324:4328  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4330:4332  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4334:4340  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4314:4323  _transfer */\n      tag_81\n        /* \"contracts/token/ERC20/ERC20.sol\":4314:4341  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":4359:4363  true */\n      0x01\n      swap5\n        /* \"contracts/token/ERC20/ERC20.sol\":4076:4371  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4780:5018  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/token/ERC20/ERC20.sol\":4868:4872  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":4924:4988  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":4940:4947  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4977:4987  addedValue */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4949:4974  allowance(owner, spender) */\n      tag_86\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4940:4947  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4949:4958  allowance */\n      tag_61\n        /* \"contracts/token/ERC20/ERC20.sol\":4949:4974  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/token/ERC20/ERC20.sol\":4949:4987  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/token/ERC20/ERC20.sol\":4924:4932  _approve */\n      tag_74\n        /* \"contracts/token/ERC20/ERC20.sol\":4924:4988  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":1163:1267  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"contracts/token/ERC20/ERC20.sol\":1219:1232  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1252:1259  _symbol */\n      0x04\n        /* \"contracts/token/ERC20/ERC20.sol\":1245:1259  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":5521:5957  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/token/ERC20/ERC20.sol\":5614:5618  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":5614:5618  bool */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5697:5722  allowance(owner, spender) */\n      tag_98\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5714:5721  spender */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":5697:5706  allowance */\n      tag_61\n        /* \"contracts/token/ERC20/ERC20.sol\":5697:5722  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/token/ERC20/ERC20.sol\":5670:5722  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5761:5776  subtractedValue */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5741:5757  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5741:5776  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":5733:5818  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":5733:5818  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":5733:5818  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/token/ERC20/ERC20.sol\":5854:5914  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"contracts/token/ERC20/ERC20.sol\":5863:5868  owner */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5870:5877  spender */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":5898:5913  subtractedValue */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":5879:5895  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":5879:5913  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5854:5862  _approve */\n      tag_74\n        /* \"contracts/token/ERC20/ERC20.sol\":5854:5914  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2568:2761  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/token/ERC20/ERC20.sol\":2647:2651  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":2703:2731  _transfer(owner, to, amount) */\n      tag_73\n        /* \"contracts/utils/Context.sol\":173:183  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":2720:2722  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":2724:2730  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":2703:2712  _transfer */\n      tag_81\n        /* \"contracts/token/ERC20/ERC20.sol\":2703:2731  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2824:2975  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2958  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":2913:2920  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2958  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2951  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2958  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":2940:2967  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":2824:2975  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":9548:9928  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":9684:9703  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9676:9744  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":9676:9744  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":9676:9744  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":9676:9744  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":9763:9784  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9755:9823  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":9755:9823  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":9755:9823  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":9755:9823  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9854  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9847  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9854  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9863  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":9836:9872  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":9888:9920  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":9888:9920  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":9888:9920  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":9548:9928  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":10219:10672  function _spendAllowance(... */\n    tag_79:\n        /* \"contracts/token/ERC20/ERC20.sol\":10354:10378  uint256 currentAllowance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10381:10406  allowance(owner, spender) */\n      tag_117\n        /* \"contracts/token/ERC20/ERC20.sol\":10391:10396  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10398:10405  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10381:10390  allowance */\n      tag_61\n        /* \"contracts/token/ERC20/ERC20.sol\":10381:10406  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/token/ERC20/ERC20.sol\":10354:10406  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"contracts/token/ERC20/ERC20.sol\":10421:10437  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10421:10458  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/token/ERC20/ERC20.sol\":10417:10665  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10503:10509  amount */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10483:10499  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10483:10509  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":10475:10543  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":10475:10543  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":10475:10543  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":10475:10543  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"contracts/token/ERC20/ERC20.sol\":10587:10638  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"contracts/token/ERC20/ERC20.sol\":10596:10601  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10603:10610  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10631:10637  amount */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10612:10628  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10612:10637  currentAllowance - amount */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":10587:10595  _approve */\n      tag_74\n        /* \"contracts/token/ERC20/ERC20.sol\":10587:10638  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/token/ERC20/ERC20.sol\":10343:10672  {... */\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":10219:10672  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":6427:7267  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":6558:6576  from != address(0) */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6550:6618  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":6550:6618  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":6550:6618  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":6550:6618  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":6637:6653  to != address(0) */\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6629:6693  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":6629:6693  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":6629:6693  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":6629:6693  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":6779:6794  _balances[from] */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6757:6776  uint256 fromBalance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6779:6794  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":6813:6834  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":6805:6877  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":6805:6877  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":6805:6877  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":6805:6877  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":6913:6928  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6913:6922  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6913:6928  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":6931:6951  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":6913:6951  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":7131:7144  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":7131:7154  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":7183:7209  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":7131:7144  _balances[to] */\n      swap1\n      swap3\n        /* \"contracts/token/ERC20/ERC20.sol\":7183:7209  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":7183:7209  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":7222:7259  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"contracts/token/ERC20/ERC20.sol\":11272:11397  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220397abf3cf2b82582a8b2bc9456c7e07683575c3a49bf679f35fc50c3b60f34c864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_417": {
									"entryPoint": null,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:8"
															},
															"nodeType": "YulIf",
															"src": "353:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:8"
															},
															"nodeType": "YulIf",
															"src": "536:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:8"
															},
															"nodeType": "YulIf",
															"src": "698:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:8",
																"statements": []
															},
															"src": "779:133:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:840:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:8"
															},
															"nodeType": "YulIf",
															"src": "1119:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:8"
															},
															"nodeType": "YulIf",
															"src": "1256:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:8"
															},
															"nodeType": "YulIf",
															"src": "1429:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:8",
														"type": ""
													}
												],
												"src": "991:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:8"
															},
															"nodeType": "YulIf",
															"src": "1701:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:8"
															},
															"nodeType": "YulIf",
															"src": "1771:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:8",
														"type": ""
													}
												],
												"src": "1558:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:8",
														"type": ""
													}
												],
												"src": "1943:121:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:8"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:8",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:8"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:8"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:8"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:8"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:8"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:8",
																			"statements": []
																		},
																		"src": "2516:82:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:8"
															},
															"nodeType": "YulIf",
															"src": "2160:448:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:8",
														"type": ""
													}
												],
												"src": "2069:545:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:8",
														"type": ""
													}
												],
												"src": "2619:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:8"
															},
															"nodeType": "YulIf",
															"src": "2929:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:8",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:8"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:8",
																					"statements": []
																				},
																				"src": "3376:236:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:8"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:8",
														"type": ""
													}
												],
												"src": "2790:1352:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220397abf3cf2b82582a8b2bc9456c7e07683575c3a49bf679f35fc50c3b60f34c864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH27 0xBF3CF2B82582A8B2BC9456C7E07683575C3A49BF679F35FC50C3B6 0xF CALLVALUE 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "164:11964:3:-:0;;;758:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;825:5;:13;833:5;825;:13;:::i;:::-;-1:-1:-1;849:7:3;:17;859:7;849;:17;:::i;:::-;;758:116;;164:11964;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:8:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:8;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:8;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:8;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:8;;;3992:26;3943:89;-1:-1:-1;;2747:1:8;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:8;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:8;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:8;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:8:o;:::-;164:11964:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_893": {
									"entryPoint": 858,
									"id": 893,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_947": {
									"entryPoint": null,
									"id": 947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1117": {
									"entryPoint": null,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_936": {
									"entryPoint": 1150,
									"id": 936,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_719": {
									"entryPoint": 1272,
									"id": 719,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_514": {
									"entryPoint": 815,
									"id": 514,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_539": {
									"entryPoint": 562,
									"id": 539,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_471": {
									"entryPoint": null,
									"id": 471,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_642": {
									"entryPoint": 673,
									"id": 642,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_601": {
									"entryPoint": 624,
									"id": 601,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_427": {
									"entryPoint": 416,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_437": {
									"entryPoint": 658,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_457": {
									"entryPoint": null,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_572": {
									"entryPoint": 588,
									"id": 572,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_496": {
									"entryPoint": 801,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:8",
																"statements": []
															},
															"src": "294:140:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:548:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:8"
															},
															"nodeType": "YulIf",
															"src": "664:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:8",
														"type": ""
													}
												],
												"src": "567:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:8"
															},
															"nodeType": "YulIf",
															"src": "842:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:8",
														"type": ""
													}
												],
												"src": "745:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:8",
														"type": ""
													}
												],
												"src": "1004:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:8",
														"type": ""
													}
												],
												"src": "1196:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:8"
															},
															"nodeType": "YulIf",
															"src": "1492:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:8",
														"type": ""
													}
												],
												"src": "1378:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:8",
														"type": ""
													}
												],
												"src": "1711:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:8"
															},
															"nodeType": "YulIf",
															"src": "1980:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:8",
														"type": ""
													}
												],
												"src": "1900:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:8"
															},
															"nodeType": "YulIf",
															"src": "2188:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:8",
														"type": ""
													}
												],
												"src": "2091:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:8"
															},
															"nodeType": "YulIf",
															"src": "2499:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:8"
															},
															"nodeType": "YulIf",
															"src": "2569:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:8",
														"type": ""
													}
												],
												"src": "2356:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:8"
															},
															"nodeType": "YulIf",
															"src": "2824:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:8",
														"type": ""
													}
												],
												"src": "2741:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:8",
														"type": ""
													}
												],
												"src": "2968:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:8",
														"type": ""
													}
												],
												"src": "3374:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:8",
														"type": ""
													}
												],
												"src": "3779:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:8",
														"type": ""
													}
												],
												"src": "4182:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:8",
														"type": ""
													}
												],
												"src": "4540:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:8",
														"type": ""
													}
												],
												"src": "4946:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:8",
														"type": ""
													}
												],
												"src": "5350:402:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220397abf3cf2b82582a8b2bc9456c7e07683575c3a49bf679f35fc50c3b60f34c864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH27 0xBF3CF2B82582A8B2BC9456C7E07683575C3A49BF679F35FC50C3B6 0xF CALLVALUE 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "164:11964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3295:201;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;3295:201:3;1004:187:8;2064:108:3;2152:12;;2064:108;;;1342:25:8;;;1330:2;1315:18;2064:108:3;1196:177:8;4076:295:3;;;;;;:::i;:::-;;:::i;1906:93::-;;;1989:2;1853:36:8;;1841:2;1826:18;1906:93:3;1711:184:8;4780:238:3;;;;;;:::i;:::-;;:::i;2235:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2336:18:3;2309:7;2336:18;;;;;;;;;;;;2235:127;1163:104;;;:::i;5521:436::-;;;;;;:::i;:::-;;:::i;2568:193::-;;;;;;:::i;:::-;;:::i;2824:151::-;;;;;;:::i;:::-;;:::i;944:100::-;998:13;1031:5;1024:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:100;:::o;3295:201::-;3378:4;173:10:7;3434:32:3;173:10:7;3450:7:3;3459:6;3434:8;:32::i;:::-;3484:4;3477:11;;;3295:201;;;;;:::o;4076:295::-;4207:4;173:10:7;4265:38:3;4281:4;173:10:7;4296:6:3;4265:15;:38::i;:::-;4314:27;4324:4;4330:2;4334:6;4314:9;:27::i;:::-;-1:-1:-1;4359:4:3;;4076:295;-1:-1:-1;;;;4076:295:3:o;4780:238::-;4868:4;173:10:7;4924:64:3;173:10:7;4940:7:3;4977:10;4949:25;173:10:7;4940:7:3;4949:9;:25::i;:::-;:38;;;;:::i;:::-;4924:8;:64::i;1163:104::-;1219:13;1252:7;1245:14;;;;;:::i;5521:436::-;5614:4;173:10:7;5614:4:3;5697:25;173:10:7;5714:7:3;5697:9;:25::i;:::-;5670:52;;5761:15;5741:16;:35;;5733:85;;;;-1:-1:-1;;;5733:85:3;;3170:2:8;5733:85:3;;;3152:21:8;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:8;;;3292:35;3344:19;;5733:85:3;;;;;;;;;5854:60;5863:5;5870:7;5898:15;5879:16;:34;5854:8;:60::i;2568:193::-;2647:4;173:10:7;2703:28:3;173:10:7;2720:2:3;2724:6;2703:9;:28::i;2824:151::-;-1:-1:-1;;;;;2940:18:3;;;2913:7;2940:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2824:151::o;9548:380::-;-1:-1:-1;;;;;9684:19:3;;9676:68;;;;-1:-1:-1;;;9676:68:3;;3576:2:8;9676:68:3;;;3558:21:8;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:8;;;3698:34;3749:19;;9676:68:3;3374:400:8;9676:68:3;-1:-1:-1;;;;;9763:21:3;;9755:68;;;;-1:-1:-1;;;9755:68:3;;3981:2:8;9755:68:3;;;3963:21:8;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:8;;;4103:32;4152:19;;9755:68:3;3779:398:8;9755:68:3;-1:-1:-1;;;;;9836:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9888:32;;1342:25:8;;;9888:32:3;;1315:18:8;9888:32:3;;;;;;;9548:380;;;:::o;10219:453::-;10354:24;10381:25;10391:5;10398:7;10381:9;:25::i;:::-;10354:52;;-1:-1:-1;;10421:16:3;:37;10417:248;;10503:6;10483:16;:26;;10475:68;;;;-1:-1:-1;;;10475:68:3;;4384:2:8;10475:68:3;;;4366:21:8;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;10475:68:3;4182:353:8;10475:68:3;10587:51;10596:5;10603:7;10631:6;10612:16;:25;10587:8;:51::i;:::-;10343:329;10219:453;;;:::o;6427:840::-;-1:-1:-1;;;;;6558:18:3;;6550:68;;;;-1:-1:-1;;;6550:68:3;;4742:2:8;6550:68:3;;;4724:21:8;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:8;;;4864:35;4916:19;;6550:68:3;4540:401:8;6550:68:3;-1:-1:-1;;;;;6637:16:3;;6629:64;;;;-1:-1:-1;;;6629:64:3;;5148:2:8;6629:64:3;;;5130:21:8;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:8;;;5270:33;5320:19;;6629:64:3;4946:399:8;6629:64:3;-1:-1:-1;;;;;6779:15:3;;6757:19;6779:15;;;;;;;;;;;6813:21;;;;6805:72;;;;-1:-1:-1;;;6805:72:3;;5552:2:8;6805:72:3;;;5534:21:8;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:8;;;5674:36;5727:19;;6805:72:3;5350:402:8;6805:72:3;-1:-1:-1;;;;;6913:15:3;;;:9;:15;;;;;;;;;;;6931:20;;;6913:38;;7131:13;;;;;;;;;;:23;;;;;;7183:26;;1342:25:8;;;7131:13:3;;7183:26;;1315:18:8;7183:26:3;;;;;;;7222:37;11272:125;14:548:8;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:8:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 164,
									"end": 12128,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 758,
									"end": 874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 758,
									"end": 874,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 825,
									"end": 830,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 825,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 833,
									"end": 838,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 825,
									"end": 830,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 825,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 825,
									"end": 838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 825,
									"end": 838,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 825,
									"end": 838,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 849,
									"end": 856,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 849,
									"end": 866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 859,
									"end": 866,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 849,
									"end": 856,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 849,
									"end": 866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 849,
									"end": 866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 849,
									"end": 866,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 849,
									"end": 866,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 849,
									"end": 866,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 758,
									"end": 874,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 12128,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220397abf3cf2b82582a8b2bc9456c7e07683575c3a49bf679f35fc50c3b60f34c864736f6c63430008110033",
									".code": [
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 12128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 944,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 944,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3295,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3295,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2152,
											"end": 2164,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4076,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4076,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1906,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4780,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4780,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2235,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1163,
											"end": 1267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5521,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5521,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2568,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2568,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2824,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2824,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1031,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1024,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1024,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3434,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3466,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3434,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3488,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3477,
											"end": 3488,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4281,
											"end": 4285,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4265,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4265,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4332,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4340,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4314,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4371,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4780,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 4987,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4949,
											"end": 4974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4974,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4949,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4949,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4949,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4924,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4924,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1163,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1245,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5521,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5721,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5697,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5722,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5697,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5761,
											"end": 5776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5757,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5776,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5776,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5733,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5863,
											"end": 5868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 5877,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 5913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5854,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2568,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 173,
											"end": 183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2730,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2703,
											"end": 2731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2824,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2951,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9684,
											"end": 9703,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9684,
											"end": 9703,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 9676,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9763,
											"end": 9784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9763,
											"end": 9784,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 9755,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9847,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9863,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9872,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9872,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9920,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10354,
											"end": 10378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 10391,
											"end": 10396,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10398,
											"end": 10405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10381,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10381,
											"end": 10406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10381,
											"end": 10406,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 10381,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10354,
											"end": 10406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10354,
											"end": 10406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10458,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10417,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10417,
											"end": 10665,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10483,
											"end": 10499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10483,
											"end": 10509,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10483,
											"end": 10509,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 10475,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10587,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10596,
											"end": 10601,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10603,
											"end": 10610,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10612,
											"end": 10628,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10612,
											"end": 10637,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10587,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 10587,
											"end": 10638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10587,
											"end": 10638,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10587,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10343,
											"end": 10672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6427,
											"end": 7267,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6427,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6550,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6637,
											"end": 6653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6637,
											"end": 6653,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6629,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6757,
											"end": 6776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 6805,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6951,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7209,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11272,
											"end": 11397,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/DexToken.sol",
								"contracts/access/Ownable.sol",
								"contracts/security/Pausable.sol",
								"contracts/token/ERC20/ERC20.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1aa3e559a5a5aa024eb2ba94c2f35fa4896da626cf0571381a6570839e88b878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a2c0398b0d3316b954de954e3605e4732795720c8755370c571b9a69285e957\",\"dweb:/ipfs/QmfREAu8385dr4rr6etyi2TnUoiiJ6vKUzVJTjQaoVbVJ6\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa59f4ccfacfe68f8d0ef03fd70f28374485cb601c7651cbeee937db4f92d836d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf51dc64aa55b1aac75794d6d70d2a0b96f72836b1ab408bbbd6b6af42fee2c\",\"dweb:/ipfs/QmNQwa4ZQCZTbRa8muRPRfzicf7Cmj9Hv9xbivWNC6BLDt\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xf227fb57dfa763a3606203354ce689c8ad36589c99ecf7164725bb3bea08f51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ba9ac13ad7f679c284dee8310f2998ff131052d0a9ad18ff6853ccdf523e5d9\",\"dweb:/ipfs/QmaxJVNjaVjfRFeKzLUjnr1cWbNx9MUTNBgZtoSEvdELre\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xdd49d4261e071906d19ca00c47714446e0418d91f656a031b90f43770c0fcc9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4565d7b2f227e6b4e6e3a402941971b49bf4abe241ce06e6f3660cd070b3ba98\",\"dweb:/ipfs/QmSPa2XJXCmiwFMrKRE2StCWiQJb8sowvBW5VbCVMLHCFH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 388,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 394,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 396,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 398,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 400,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa59f4ccfacfe68f8d0ef03fd70f28374485cb601c7651cbeee937db4f92d836d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf51dc64aa55b1aac75794d6d70d2a0b96f72836b1ab408bbbd6b6af42fee2c\",\"dweb:/ipfs/QmNQwa4ZQCZTbRa8muRPRfzicf7Cmj9Hv9xbivWNC6BLDt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1aa3e559a5a5aa024eb2ba94c2f35fa4896da626cf0571381a6570839e88b878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a2c0398b0d3316b954de954e3605e4732795720c8755370c571b9a69285e957\",\"dweb:/ipfs/QmfREAu8385dr4rr6etyi2TnUoiiJ6vKUzVJTjQaoVbVJ6\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa59f4ccfacfe68f8d0ef03fd70f28374485cb601c7651cbeee937db4f92d836d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf51dc64aa55b1aac75794d6d70d2a0b96f72836b1ab408bbbd6b6af42fee2c\",\"dweb:/ipfs/QmNQwa4ZQCZTbRa8muRPRfzicf7Cmj9Hv9xbivWNC6BLDt\"]},\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x320fbdd0fdea5db06d808b5702d64a896cd0eaa7808b689e01132b043b721224\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c261975d34c1326f2daaa39c2ed349c5edffd359573eb478aa66239fd877125\",\"dweb:/ipfs/QmWhV4RdbXFEG1WfS7upjgNc9Q9U22sjbCoi52YQDQ4gne\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xf227fb57dfa763a3606203354ce689c8ad36589c99ecf7164725bb3bea08f51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ba9ac13ad7f679c284dee8310f2998ff131052d0a9ad18ff6853ccdf523e5d9\",\"dweb:/ipfs/QmaxJVNjaVjfRFeKzLUjnr1cWbNx9MUTNBgZtoSEvdELre\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xdd49d4261e071906d19ca00c47714446e0418d91f656a031b90f43770c0fcc9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4565d7b2f227e6b4e6e3a402941971b49bf4abe241ce06e6f3660cd070b3ba98\",\"dweb:/ipfs/QmSPa2XJXCmiwFMrKRE2StCWiQJb8sowvBW5VbCVMLHCFH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 388,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 394,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 396,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 398,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 400,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa59f4ccfacfe68f8d0ef03fd70f28374485cb601c7651cbeee937db4f92d836d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf51dc64aa55b1aac75794d6d70d2a0b96f72836b1ab408bbbd6b6af42fee2c\",\"dweb:/ipfs/QmNQwa4ZQCZTbRa8muRPRfzicf7Cmj9Hv9xbivWNC6BLDt\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xf227fb57dfa763a3606203354ce689c8ad36589c99ecf7164725bb3bea08f51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ba9ac13ad7f679c284dee8310f2998ff131052d0a9ad18ff6853ccdf523e5d9\",\"dweb:/ipfs/QmaxJVNjaVjfRFeKzLUjnr1cWbNx9MUTNBgZtoSEvdELre\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0xdd49d4261e071906d19ca00c47714446e0418d91f656a031b90f43770c0fcc9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4565d7b2f227e6b4e6e3a402941971b49bf4abe241ce06e6f3660cd070b3ba98\",\"dweb:/ipfs/QmSPa2XJXCmiwFMrKRE2StCWiQJb8sowvBW5VbCVMLHCFH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/DexToken.sol": {
				"ast": {
					"absolutePath": "contracts/DexToken.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"DexToken": [
							154
						],
						"ERC20": [
							959
						],
						"ERC20Burnable": [
							1081
						],
						"IERC20": [
							1037
						],
						"IERC20Metadata": [
							1106
						],
						"Ownable": [
							266
						],
						"Pausable": [
							373
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/token/ERC20/ERC20.sol",
							"file": "./token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 155,
							"sourceUnit": 960,
							"src": "61:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "./token/ERC20/extensions/ERC20Burnable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 155,
							"sourceUnit": 1082,
							"src": "96:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/security/Pausable.sol",
							"file": "./security/Pausable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 155,
							"sourceUnit": 374,
							"src": "150:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "./access/Ownable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 155,
							"sourceUnit": 267,
							"src": "185:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "ERC20",
										"nameLocations": [
											"242:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 959,
										"src": "242:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "242:5:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "ERC20Burnable",
										"nameLocations": [
											"249:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1081,
										"src": "249:13:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "249:13:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "Pausable",
										"nameLocations": [
											"264:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 373,
										"src": "264:8:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "264:8:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "Ownable",
										"nameLocations": [
											"274:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "274:7:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "274:7:0"
								}
							],
							"canonicalName": "DexToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154,
								266,
								373,
								1081,
								959,
								1106,
								1037,
								1127
							],
							"name": "DexToken",
							"nameLocation": "230:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bed99850",
									"id": 15,
									"mutability": "mutable",
									"name": "burnRate",
									"nameLocation": "304:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "289:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "358:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 23,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "375:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "379:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "375:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_50000000000000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000000000000"
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3530",
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "387:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000000"
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 26,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "392:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3237",
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "398:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																},
																"src": "392:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000000"
																}
															},
															"src": "387:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50000000000000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_50000000000000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000000000000"
															}
														],
														"id": 22,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "369:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "369:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "369:32:0"
											},
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "412:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "423:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "412:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "412:12:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "446578546f6b656e",
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "339:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a9b6a48dee35ae5b7c4f50929755ee0e4040de85ca17c2ae24764577a83dcdd5",
														"typeString": "literal_string \"DexToken\""
													},
													"value": "DexToken"
												},
												{
													"hexValue": "444558",
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_51489d4263e7aff6c512a83666a144c08d740a160db30b26495ddfc5e7f1c21e",
														"typeString": "literal_string \"DEX\""
													},
													"value": "DEX"
												}
											],
											"id": 20,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 17,
												"name": "ERC20",
												"nameLocations": [
													"333:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 959,
												"src": "333:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "333:24:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "330:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:0:0"
									},
									"scope": 154,
									"src": "319:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "505:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 42,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "516:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "516:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "516:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 40,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 39,
												"name": "onlyOwner",
												"nameLocations": [
													"495:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "495:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "495:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "480:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:0:0"
									},
									"scope": 154,
									"src": "471:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "576:29:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 51,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "587:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "587:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 49,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 48,
												"name": "onlyOwner",
												"nameLocations": [
													"566:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "566:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "566:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "549:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:0:0"
									},
									"scope": 154,
									"src": "540:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										947
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "750:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 70,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "788:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 71,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "794:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 72,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "798:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 67,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "761:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DexToken_$154_$",
																"typeString": "type(contract super DexToken)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "767:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "761:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "761:44:0"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 64,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 63,
												"name": "whenNotPaused",
												"nameLocations": [
													"713:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 300,
												"src": "713:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "713:13:0"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "623:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 65,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "736:8:0"
									},
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "652:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "644:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "666:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "658:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "678:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "670:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:42:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:0:0"
									},
									"scope": 154,
									"src": "614:199:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "921:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "newBurnRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "940:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "955:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "940:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e20726174652063616e6e6f74206265206d6f7265207468616e2031303025",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "960:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2bf40ff2b9221b0830d3e8ee57338a2517d764a1b077ae7fd03bbeb45a71278",
																"typeString": "literal_string \"Burn rate cannot be more than 100%\""
															},
															"value": "Burn rate cannot be more than 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2bf40ff2b9221b0830d3e8ee57338a2517d764a1b077ae7fd03bbeb45a71278",
																"typeString": "literal_string \"Burn rate cannot be more than 100%\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "932:65:0"
											},
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1008:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "newBurnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1019:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1008:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1008:22:0"
											}
										]
									},
									"functionSelector": "189d165e",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 81,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 80,
												"name": "onlyOwner",
												"nameLocations": [
													"911:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "911:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "911:9:0"
										}
									],
									"name": "setBurnRate",
									"nameLocation": "871:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "newBurnRate",
												"nameLocation": "891:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "883:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:21:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:0:0"
									},
									"scope": 154,
									"src": "862:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										719
									],
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1235:608:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 106,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "1254:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1272:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1264:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 107,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1264:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1264:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1254:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1276:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1246:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "1246:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1335:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1356:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1348:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1348:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1348:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1335:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1360:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1327:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1327:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1327:71:0"
											},
											{
												"assignments": [
													126
												],
												"declarations": [
													{
														"constant": false,
														"id": 126,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "1488:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "1480:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1480:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 132,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 127,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1501:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 128,
															"name": "burnRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1510:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1501:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1521:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1501:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1480:44:0"
											},
											{
												"assignments": [
													134
												],
												"declarations": [
													{
														"constant": false,
														"id": 134,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "1610:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "1602:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1602:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 135,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1623:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 136,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1632:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1623:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1602:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "1713:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 139,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1699:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1699:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 147,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1805:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 148,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1813:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 149,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1824:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 144,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1789:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DexToken_$154_$",
																"typeString": "type(contract super DexToken)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1795:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 719,
														"src": "1789:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1789:46:0"
											}
										]
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "1148:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1226:8:0"
									},
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1166:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1182:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1174:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1201:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1193:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:51:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:0:0"
									},
									"scope": 154,
									"src": "1139:704:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "221:1625:0",
							"usedErrors": []
						}
					],
					"src": "33:1821:0"
				},
				"id": 0
			},
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"Ownable": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 267,
							"sourceUnit": 1128,
							"src": "60:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Context",
										"nameLocations": [
											"123:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "123:7:1"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "123:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266,
								1127
							],
							"name": "Ownable",
							"nameLocation": "112:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "154:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 266,
									"src": "138:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 167,
									"name": "OwnershipTransferred",
									"nameLocation": "175:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "212:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "196:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "243:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "227:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:57:1"
									},
									"src": "169:84:1"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "374:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 172,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "404:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "404:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 171,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "385:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "385:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "385:32:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "261:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 177,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:0:1"
									},
									"scope": 266,
									"src": "360:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "539:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 180,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "550:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "550:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "550:13:1"
											},
											{
												"id": 183,
												"nodeType": "PlaceholderStatement",
												"src": "574:1:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "433:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 185,
									"name": "onlyOwner",
									"nameLocation": "527:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "536:2:1"
									},
									"src": "518:65:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "719:32:1",
										"statements": [
											{
												"expression": {
													"id": 191,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 161,
													"src": "737:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 190,
												"id": 192,
												"nodeType": "Return",
												"src": "730:13:1"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "591:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "673:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:2:1"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "710:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:9:1"
									},
									"scope": 266,
									"src": "664:87:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "874:87:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 199,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "893:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "893:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "904:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "904:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "893:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "918:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "885:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "885:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "885:68:1"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "759:64:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "838:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:2:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:1"
									},
									"scope": 266,
									"src": "829:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1366:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1396:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 215,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1396:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1396:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 214,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1377:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1377:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1377:30:1"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "969:337:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 211,
												"name": "onlyOwner",
												"nameLocations": [
													"1356:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "1356:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1356:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1321:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1366:0:1"
									},
									"scope": 266,
									"src": "1312:103:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1640:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 231,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "1659:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1679:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1671:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 232,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1671:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1671:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1659:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1683:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1651:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1651:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1651:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1754:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 240,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1735:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1735:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "1735:28:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1423:141:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 227,
												"name": "onlyOwner",
												"nameLocations": [
													"1630:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "1630:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1630:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1579:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1605:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1597:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:18:1"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:0:1"
									},
									"scope": 266,
									"src": "1570:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1994:128:1",
										"statements": [
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2013:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 264,
														"src": "2005:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 251,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2005:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"id": 253,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 161,
													"src": "2024:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2005:25:1"
											},
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 255,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "2041:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 256,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2050:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2041:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "2041:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 260,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "2095:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 261,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "2105:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 259,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2074:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "EmitStatement",
												"src": "2069:45:1"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1779:146:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1940:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1967:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1959:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:18:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:0:1"
									},
									"scope": 266,
									"src": "1931:191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 267,
							"src": "94:2031:1",
							"usedErrors": []
						}
					],
					"src": "33:2092:1"
				},
				"id": 1
			},
			"contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"Pausable": [
							373
						]
					},
					"id": 374,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 374,
							"sourceUnit": 1128,
							"src": "60:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 270,
										"name": "Context",
										"nameLocations": [
											"124:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "124:7:2"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "124:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 373,
							"linearizedBaseContracts": [
								373,
								1127
							],
							"name": "Pausable",
							"nameLocation": "112:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "139:75:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 276,
									"name": "Paused",
									"nameLocation": "226:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "241:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "233:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:17:2"
									},
									"src": "220:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "258:72:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 281,
									"name": "Unpaused",
									"nameLocation": "342:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "351:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:17:2"
									},
									"src": "336:32:2"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "389:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 373,
									"src": "376:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 282,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "376:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "494:34:2",
										"statements": [
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 287,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "505:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "515:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "505:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "505:15:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "405:69:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 292,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:2:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:0:2"
									},
									"scope": 373,
									"src": "480:48:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "748:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 295,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "759:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "759:19:2"
											},
											{
												"id": 298,
												"nodeType": "PlaceholderStatement",
												"src": "789:1:2"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "536:181:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 300,
									"name": "whenNotPaused",
									"nameLocation": "732:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:2:2"
									},
									"src": "723:75:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "1007:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 303,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1018:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1018:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1018:16:2"
											},
											{
												"id": 306,
												"nodeType": "PlaceholderStatement",
												"src": "1045:1:2"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "806:173:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 308,
									"name": "whenPaused",
									"nameLocation": "994:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:2:2"
									},
									"src": "985:69:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1207:33:2",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 283,
													"src": "1225:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "1218:14:2"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1062:86:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1163:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1169:2:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1201:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:6:2"
									},
									"scope": 373,
									"src": "1154:86:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1364:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1383:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 322,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1384:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1384:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1375:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "1375:38:2"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "1248:59:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1322:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1339:2:2"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:0:2"
									},
									"scope": 373,
									"src": "1313:108:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "1546:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 334,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "1565:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1565:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1575:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1557:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "1557:41:2"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1429:63:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1507:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1521:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1546:0:2"
									},
									"scope": 373,
									"src": "1498:108:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "1799:69:2",
										"statements": [
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 346,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "1810:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1820:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1810:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "1810:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 351,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "1847:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1847:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "1840:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1840:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "EmitStatement",
												"src": "1835:25:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "1614:130:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 343,
												"name": "whenNotPaused",
												"nameLocations": [
													"1785:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 300,
												"src": "1785:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1785:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "1759:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:2"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1799:0:2"
									},
									"scope": 373,
									"src": "1750:118:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2057:72:2",
										"statements": [
											{
												"expression": {
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 362,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "2068:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2068:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "2068:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 367,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2108:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2108:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 366,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2099:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "EmitStatement",
												"src": "2094:27:2"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "1876:127:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 359,
												"name": "whenPaused",
												"nameLocations": [
													"2046:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 308,
												"src": "2046:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2046:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2018:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:2:2"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:2"
									},
									"scope": 373,
									"src": "2009:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 374,
							"src": "94:2038:2",
							"usedErrors": []
						}
					],
					"src": "33:2099:2"
				},
				"id": 2
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"ERC20": [
							959
						],
						"IERC20": [
							1037
						],
						"IERC20Metadata": [
							1106
						]
					},
					"id": 960,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 375,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 960,
							"sourceUnit": 1128,
							"src": "60:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 960,
							"sourceUnit": 1038,
							"src": "95:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 960,
							"sourceUnit": 1107,
							"src": "119:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 379,
										"name": "Context",
										"nameLocations": [
											"182:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "182:7:3"
									},
									"id": 380,
									"nodeType": "InheritanceSpecifier",
									"src": "182:7:3"
								},
								{
									"baseName": {
										"id": 381,
										"name": "IERC20",
										"nameLocations": [
											"191:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1037,
										"src": "191:6:3"
									},
									"id": 382,
									"nodeType": "InheritanceSpecifier",
									"src": "191:6:3"
								},
								{
									"baseName": {
										"id": 383,
										"name": "IERC20Metadata",
										"nameLocations": [
											"199:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "199:14:3"
									},
									"id": 384,
									"nodeType": "InheritanceSpecifier",
									"src": "199:14:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 959,
							"linearizedBaseContracts": [
								959,
								1106,
								1037,
								1127
							],
							"name": "ERC20",
							"nameLocation": "173:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 388,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "257:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "221:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 387,
										"keyType": {
											"id": 385,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "229:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "221:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 386,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "240:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 394,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "331:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "275:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 393,
										"keyType": {
											"id": 389,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "283:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "275:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 392,
											"keyType": {
												"id": 390,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "302:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "294:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 391,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "313:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 396,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "367:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "351:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 395,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "351:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 398,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "403:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "388:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 397,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "388:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 400,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "430:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "415:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 399,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "415:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "814:60:3",
										"statements": [
											{
												"expression": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 408,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "825:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 409,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "833:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "825:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "825:13:3"
											},
											{
												"expression": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 412,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "849:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 413,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "859:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "849:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "849:17:3"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "446:306:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 417,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "770:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "770:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "805:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "791:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "791:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:44:3"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:0:3"
									},
									"scope": 959,
									"src": "758:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1093
									],
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1013:31:3",
										"statements": [
											{
												"expression": {
													"id": 424,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 398,
													"src": "1031:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 423,
												"id": 425,
												"nodeType": "Return",
												"src": "1024:12:3"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "882:56:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "953:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 420,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "980:8:3"
									},
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "957:2:3"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "998:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "998:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:15:3"
									},
									"scope": 959,
									"src": "944:100:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1099
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1234:33:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "1252:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "1245:14:3"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1052:105:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1172:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 430,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1201:8:3"
									},
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1178:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1219:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1219:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:15:3"
									},
									"scope": 959,
									"src": "1163:104:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1105
									],
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "1971:28:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1989:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "1982:9:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1275:625:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1915:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 440,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1946:8:3"
									},
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1923:2:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1964:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 441,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1964:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:7:3"
									},
									"scope": 959,
									"src": "1906:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										986
									],
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2134:38:3",
										"statements": [
											{
												"expression": {
													"id": 454,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "2152:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 455,
												"nodeType": "Return",
												"src": "2145:19:3"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "2007:51:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2073:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2107:8:3"
									},
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:2:3"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2125:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:9:3"
									},
									"scope": 959,
									"src": "2064:108:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										994
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "2318:44:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 466,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2336:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 468,
													"indexExpression": {
														"id": 467,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "2346:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2336:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 465,
												"id": 469,
												"nodeType": "Return",
												"src": "2329:25:3"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "2180:49:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2244:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 462,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2291:8:3"
									},
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2262:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2254:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2253:17:3"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2309:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2308:9:3"
									},
									"scope": 959,
									"src": "2235:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2653:108:3",
										"statements": [
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2672:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "2664:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 482,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2664:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 484,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "2680:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2664:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2713:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "2720:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2724:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2703:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2703:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "2703:28:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2749:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 481,
												"id": 494,
												"nodeType": "Return",
												"src": "2742:11:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "2370:192:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2577:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 478,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2629:8:3"
									},
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2594:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2586:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2586:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2606:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2598:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2598:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:28:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2647:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2647:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2646:6:3"
									},
									"scope": 959,
									"src": "2568:193:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1014
									],
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "2922:53:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 507,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2940:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 508,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "2952:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2940:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 511,
													"indexExpression": {
														"id": 510,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "2959:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2940:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 506,
												"id": 512,
												"nodeType": "Return",
												"src": "2933:34:3"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "2769:49:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2833:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2895:8:3"
									},
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2851:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2843:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2866:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2858:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2842:32:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2913:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2913:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2912:9:3"
									},
									"scope": 959,
									"src": "2824:151:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1024
									],
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "3384:112:3",
										"statements": [
											{
												"assignments": [
													526
												],
												"declarations": [
													{
														"constant": false,
														"id": 526,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3403:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 538,
														"src": "3395:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 525,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3395:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 527,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "3411:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3395:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3443:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "3450:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "3459:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "3434:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3434:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3434:32:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3484:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 524,
												"id": 537,
												"nodeType": "Return",
												"src": "3477:11:3"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "2983:306:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3304:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 521,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3360:8:3"
									},
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3320:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "3312:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3337:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "3329:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:33:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "3378:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3378:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:6:3"
									},
									"scope": 959,
									"src": "3295:201:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1036
									],
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "4213:158:3",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4232:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4224:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 552,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4224:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 554,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4242:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4242:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4224:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4281:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "4287:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "4296:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "4265:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4265:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "4265:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4324:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4330:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "4334:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "4314:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4314:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "4314:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4359:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 551,
												"id": 570,
												"nodeType": "Return",
												"src": "4352:11:3"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "3504:566:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4085:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4189:8:3"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4116:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4108:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4139:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4131:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4131:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4160:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4152:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4097:76:3"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4207:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4207:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4206:6:3"
									},
									"scope": 959,
									"src": "4076:295:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4874:144:3",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4893:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4885:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 582,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4885:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 584,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4901:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4901:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4885:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4933:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "4940:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 591,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "4959:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 592,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "4966:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 590,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "4949:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4949:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 594,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "4977:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4949:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4924:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4924:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "4924:64:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5006:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 581,
												"id": 599,
												"nodeType": "Return",
												"src": "4999:11:3"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "4379:395:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4789:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4815:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4807:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4807:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4832:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4824:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4806:37:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4868:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:3"
									},
									"scope": 959,
									"src": "4780:238:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "5620:337:3",
										"statements": [
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5639:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "5631:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 611,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5631:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 613,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5647:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5631:28:3"
											},
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5678:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "5670:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5670:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"arguments": [
														{
															"id": 619,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5707:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 618,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "5697:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5697:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5670:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 624,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "5741:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 625,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "5761:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5741:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5778:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5733:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5733:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "5733:85:3"
											},
											{
												"id": 638,
												"nodeType": "UncheckedBlock",
												"src": "5829:97:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 631,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "5863:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 632,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "5870:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 633,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "5879:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 634,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "5898:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5879:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 630,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "5854:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5854:60:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 637,
														"nodeType": "ExpressionStatement",
														"src": "5854:60:3"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5945:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 610,
												"id": 640,
												"nodeType": "Return",
												"src": "5938:11:3"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "5026:489:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5530:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5556:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "5548:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5573:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "5565:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5547:42:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "5614:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5614:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:6:3"
									},
									"scope": 959,
									"src": "5521:436:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "6539:728:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 653,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "6558:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6574:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6566:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 654,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6566:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6566:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6558:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6578:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6550:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6550:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "6550:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 663,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "6637:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6651:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6643:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 664,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6643:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6643:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6637:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6655:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6629:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "6629:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "6727:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "6733:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6737:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "6706:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6706:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "6706:38:3"
											},
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "6765:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 718,
														"src": "6757:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 678,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6757:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"baseExpression": {
														"id": 680,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "6779:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 682,
													"indexExpression": {
														"id": 681,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "6789:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6779:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6757:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 685,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6813:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 686,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "6828:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6813:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6836:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6805:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6805:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "6805:72:3"
											},
											{
												"id": 705,
												"nodeType": "UncheckedBlock",
												"src": "6888:278:3",
												"statements": [
													{
														"expression": {
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 691,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6913:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 693,
																"indexExpression": {
																	"id": 692,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "6923:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6913:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6931:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 695,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "6945:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6931:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6913:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 698,
														"nodeType": "ExpressionStatement",
														"src": "6913:38:3"
													},
													{
														"expression": {
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 699,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "7131:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 701,
																"indexExpression": {
																	"id": 700,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "7141:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7131:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 702,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "7148:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7131:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 704,
														"nodeType": "ExpressionStatement",
														"src": "7131:23:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 707,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "7192:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "7198:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "7202:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 706,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "7183:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7183:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "EmitStatement",
												"src": "7178:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "7242:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "7248:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 715,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "7252:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 712,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "7222:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7222:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "7222:37:3"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "5965:456:3",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6436:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6464:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "6456:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6487:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "6479:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6479:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6508:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "6500:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6500:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6445:76:3"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6539:0:3"
									},
									"scope": 959,
									"src": "6427:840:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7619:483:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 728,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "7638:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7657:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7649:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 729,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7649:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7649:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7638:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7661:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7630:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7630:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "7630:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7737:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7729:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7729:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7729:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "7741:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "7750:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "7708:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7708:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7708:49:3"
											},
											{
												"expression": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "7770:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 747,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "7786:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7770:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "7770:22:3"
											},
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "7803:178:3",
												"statements": [
													{
														"expression": {
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 750,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "7941:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 752,
																"indexExpression": {
																	"id": 751,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7951:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7941:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 753,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7963:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7941:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "7941:28:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8013:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8005:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 758,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8005:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8005:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "8017:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 763,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "8026:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "7996:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7996:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "EmitStatement",
												"src": "7991:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8074:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8066:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 767,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8066:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8066:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "8078:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "8087:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 766,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "8046:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8046:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "8046:48:3"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "7275:273:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7563:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7577:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7569:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7569:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7594:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7586:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7586:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7568:33:3"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7619:0:3"
									},
									"scope": 959,
									"src": "7554:548:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "8500:610:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 785,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "8519:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8538:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8530:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8530:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8530:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8519:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8542:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8511:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8511:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "8511:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 795,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "8612:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8629:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8621:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 796,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8621:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8621:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "8633:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "8591:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8591:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "8591:49:3"
											},
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "8661:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "8653:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 803,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"baseExpression": {
														"id": 805,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "8678:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 807,
													"indexExpression": {
														"id": 806,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8688:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8678:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8653:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "8715:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 811,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8733:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8715:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8741:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8707:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8707:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "8707:71:3"
											},
											{
												"id": 828,
												"nodeType": "UncheckedBlock",
												"src": "8789:198:3",
												"statements": [
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 816,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "8814:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 818,
																"indexExpression": {
																	"id": 817,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8824:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8814:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 819,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "8835:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 820,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "8852:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8835:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8814:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "8814:44:3"
													},
													{
														"expression": {
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "8953:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 825,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8969:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8953:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 827,
														"nodeType": "ExpressionStatement",
														"src": "8953:22:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 830,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "9013:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9030:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9022:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 831,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9022:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9022:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "9034:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 829,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "9004:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9004:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "EmitStatement",
												"src": "8999:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "9074:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9091:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9083:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9083:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9083:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "9095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "9054:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9054:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "9054:48:3"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "8110:319:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8444:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8458:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "8450:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8475:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "8467:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8467:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8449:33:3"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8500:0:3"
									},
									"scope": 959,
									"src": "8435:675:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "9665:263:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 859,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "9684:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9701:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9693:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 860,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9693:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9693:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9684:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9705:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9676:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "9676:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "9763:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9782:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9774:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 870,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9774:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9774:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9763:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9786:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9755:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "9755:68:3"
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 878,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "9836:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 881,
															"indexExpression": {
																"id": 879,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "9848:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9836:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 882,
														"indexExpression": {
															"id": 880,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "9855:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9836:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 883,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "9866:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9836:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "9836:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 887,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "9897:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "9904:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "9913:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 886,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "9888:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "9883:37:3"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "9118:424:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9557:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9584:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "9576:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9576:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9608:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "9600:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9634:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "9626:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9626:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9565:82:3"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9665:0:3"
									},
									"scope": 959,
									"src": "9548:380:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "10343:329:3",
										"statements": [
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10362:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "10354:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10354:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"arguments": [
														{
															"id": 906,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "10391:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "10398:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 905,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "10381:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10381:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10354:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "10421:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10446:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 912,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10446:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 911,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10441:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10441:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10455:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10441:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10421:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "10417:248:3",
												"trueBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "10460:205:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 918,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 904,
																			"src": "10483:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 919,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "10503:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10483:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10511:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 917,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10475:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10475:68:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "10475:68:3"
														},
														{
															"id": 932,
															"nodeType": "UncheckedBlock",
															"src": "10558:96:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 925,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 896,
																				"src": "10596:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 926,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 898,
																				"src": "10603:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 927,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 904,
																					"src": "10612:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 928,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "10631:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10612:25:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 924,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "10587:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10587:51:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "10587:51:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "9936:277:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10228:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10262:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "10254:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10254:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10286:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "10278:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10278:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10312:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "10304:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10304:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10243:82:3"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10343:0:3"
									},
									"scope": 959,
									"src": "10219:453:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "11395:2:3",
										"statements": []
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "10680:586:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11281:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11320:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "11312:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11312:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11343:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "11335:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11335:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11364:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "11356:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11301:76:3"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11395:0:3"
									},
									"scope": 959,
									"src": "11272:125:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "12123:2:3",
										"statements": []
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "11405:590:3",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12010:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12048:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "12040:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12040:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12071:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "12063:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12063:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12092:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "12084:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12084:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12029:76:3"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12123:0:3"
									},
									"scope": 959,
									"src": "12001:124:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 960,
							"src": "164:11964:3",
							"usedErrors": []
						}
					],
					"src": "33:12097:3"
				},
				"id": 3
			},
			"contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1037
						]
					},
					"id": 1038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 961,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 962,
								"nodeType": "StructuredDocumentation",
								"src": "60:72:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1037,
							"linearizedBaseContracts": [
								1037
							],
							"name": "IERC20",
							"nameLocation": "144:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "158:163:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 971,
									"name": "Transfer",
									"nameLocation": "333:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "358:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "342:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "380:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "364:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "392:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "384:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:57:4"
									},
									"src": "327:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "407:151:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 980,
									"name": "Approval",
									"nameLocation": "570:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "595:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "579:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "618:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "602:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "635:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "627:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:63:4"
									},
									"src": "564:78:4"
								},
								{
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "650:68:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "733:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "744:2:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "770:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:9:4"
									},
									"scope": 1037,
									"src": "724:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "787:74:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "876:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:17:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 1037,
									"src": "867:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "943:208:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1166:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1183:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1175:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1195:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1187:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:28:4"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1221:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1221:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:6:4"
									},
									"scope": 1037,
									"src": "1157:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "1235:270:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1520:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1538:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1530:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1553:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1545:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:32:4"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1585:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1584:9:4"
									},
									"scope": 1037,
									"src": "1511:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "1602:655:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2272:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2288:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2280:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2280:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2305:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2297:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:33:4"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2331:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2331:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2330:6:4"
									},
									"scope": 1037,
									"src": "2263:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "2345:295:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2686:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "2678:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "2701:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2730:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "2722:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:76:4"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "2762:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1033,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2762:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:6:4"
									},
									"scope": 1037,
									"src": "2646:122:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1038,
							"src": "134:2637:4",
							"usedErrors": []
						}
					],
					"src": "33:2738:4"
				},
				"id": 4
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"ERC20": [
							959
						],
						"ERC20Burnable": [
							1081
						],
						"IERC20": [
							1037
						],
						"IERC20Metadata": [
							1106
						]
					},
					"id": 1082,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 1128,
							"src": "60:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 960,
							"src": "98:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1043,
										"name": "Context",
										"nameLocations": [
											"371:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "371:7:5"
									},
									"id": 1044,
									"nodeType": "InheritanceSpecifier",
									"src": "371:7:5"
								},
								{
									"baseName": {
										"id": 1045,
										"name": "ERC20",
										"nameLocations": [
											"380:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 959,
										"src": "380:5:5"
									},
									"id": 1046,
									"nodeType": "InheritanceSpecifier",
									"src": "380:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1042,
								"nodeType": "StructuredDocumentation",
								"src": "122:212:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 1081,
							"linearizedBaseContracts": [
								1081,
								959,
								1106,
								1037,
								1127
							],
							"name": "ERC20Burnable",
							"nameLocation": "354:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "546:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1053,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "563:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "563:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "577:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "557:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "557:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "557:27:5"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "393:102:5",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "510:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "523:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "515:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:16:5"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:0:5"
									},
									"scope": 1081,
									"src": "501:91:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "977:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1004:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1069,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "1013:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1013:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1027:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1067,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "988:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "988:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1051:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1060:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1045:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1045:22:5"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "600:305:5",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "920:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "937:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "929:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "954:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "946:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:33:5"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "977:0:5"
									},
									"scope": 1081,
									"src": "911:164:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1082,
							"src": "336:742:5",
							"usedErrors": []
						}
					],
					"src": "33:1045:5"
				},
				"id": 5
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1037
						],
						"IERC20Metadata": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1083,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1084,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1107,
							"sourceUnit": 1038,
							"src": "60:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1086,
										"name": "IERC20",
										"nameLocations": [
											"237:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1037,
										"src": "237:6:6"
									},
									"id": 1087,
									"nodeType": "InheritanceSpecifier",
									"src": "237:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1085,
								"nodeType": "StructuredDocumentation",
								"src": "87:120:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1106,
							"linearizedBaseContracts": [
								1106,
								1037
							],
							"name": "IERC20Metadata",
							"nameLocation": "219:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "251:56:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "322:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:2:6"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "352:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1090,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "352:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "351:15:6"
									},
									"scope": 1106,
									"src": "313:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "375:58:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "448:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:6"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "480:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1096,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "480:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:15:6"
									},
									"scope": 1106,
									"src": "439:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "503:67:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "585:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:6"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "619:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1102,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "619:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:7:6"
									},
									"scope": 1106,
									"src": "576:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1107,
							"src": "209:420:6",
							"usedErrors": []
						}
					],
					"src": "33:596:6"
				},
				"id": 6
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "Context",
							"nameLocation": "78:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "155:36:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1113,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "173:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "177:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "173:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1115,
												"nodeType": "Return",
												"src": "166:17:7"
											}
										]
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "102:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:7"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "146:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "145:9:7"
									},
									"scope": 1127,
									"src": "93:98:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "266:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1122,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "284:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "288:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "284:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1124,
												"nodeType": "Return",
												"src": "277:15:7"
											}
										]
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "208:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "216:2:7"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "250:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "250:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "249:16:7"
									},
									"scope": 1127,
									"src": "199:101:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "60:243:7",
							"usedErrors": []
						}
					],
					"src": "33:270:7"
				},
				"id": 7
			}
		}
	}
}